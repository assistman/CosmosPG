(window["webpackJsonp"] = window["webpackJsonp"] || []).push([["chart-trading-view"],{

/***/ "./src/js/modules/chart/trading-view/components/ChartTradingView.js":
/*!**************************************************************************************!*\
  !*** ./src/js/modules/chart/trading-view/components/ChartTradingView.js + 2 modules ***!
  \**************************************************************************************/
/*! exports provided: default */
/*! ModuleConcatenation bailout: Cannot concat with ./src/js/common.types.js (<- Module is referenced from these modules with unsupported syntax: ./src/js/classes/instrument.groupname.js (referenced with cjs require), ./src/js/classes/instrument.model.js (referenced with cjs require), ./src/js/classes/instrument.status.model.js (referenced with cjs require), ./src/js/common/localization.js (referenced with cjs require), ./src/js/modules/account-settings/tabs/tab.account.classification.js (referenced with cjs require), ./src/js/modules/account-settings/tabs/tab.change.password.js (referenced with cjs require), ./src/js/modules/accountinfo/accountInfoView.js (referenced with cjs require), ./src/js/modules/accountinfo/advanced.account-info.view.js (referenced with cjs require), ./src/js/modules/app/app.view.js (referenced with cjs require), ./src/js/modules/auto-withdrawal/add_method.model.js (referenced with cjs require), ./src/js/modules/auto-withdrawal/base.model.js (referenced with cjs require), ./src/js/modules/auto-withdrawal/form.configs.js (referenced with cjs require), ./src/js/modules/bloggers/bloggers.popup.mobile.view.js (referenced with cjs require), ./src/js/modules/bloggers/bloggers.popup.view.js (referenced with cjs require), ./src/js/modules/chart/highcharts/chart-panel/chart.panel.view.js (referenced with cjs require), ./src/js/modules/chart/highcharts/multi-charts/multi.charts.view.js (referenced with cjs require), ./src/js/modules/deep-links/deep.links.js (referenced with cjs require), ./src/js/modules/deposit/base.deposit.model.js (referenced with cjs require), ./src/js/modules/deposit/deposit.first.popup.model.js (referenced with cjs require), ./src/js/modules/deposit/deposit.first.popup.view.js (referenced with cjs require), ./src/js/modules/deposit/deposit.manual.popup.model.js (referenced with cjs require), ./src/js/modules/deposit/deposit.manual.popup.view.js (referenced with cjs require), ./src/js/modules/deposit/deposit.message.model.js (referenced with cjs require), ./src/js/modules/deposit/deposit.message.view.js (referenced with cjs require), ./src/js/modules/deposit/deposit.popup.model.js (referenced with cjs require), ./src/js/modules/deposit/deposit.popup.view.js (referenced with cjs require), ./src/js/modules/deposit/select.deposit.amount.view.js (referenced with cjs require), ./src/js/modules/events-bus/events.bus.js (referenced with cjs require), ./src/js/modules/external-auth/common.js (referenced with cjs require), ./src/js/modules/first-deposit-bonus/first.deposit.bonus.view.js (referenced with cjs require), ./src/js/modules/form/form.field.multi.select.default.js (referenced with cjs require), ./src/js/modules/form/form.field.multi.select.js (referenced with cjs require), ./src/js/modules/grid/jsx/price.alerts.info.button.jsx (referenced with cjs require), ./src/js/modules/header/header.view.js (referenced with cjs require), ./src/js/modules/insiders/insider.model.js (referenced with cjs require), ./src/js/modules/insights/insights.analysts.view.js (referenced with cjs require), ./src/js/modules/insights/insights.bloggers.view.js (referenced with cjs require), ./src/js/modules/insights/insights.mobile.view.js (referenced with cjs require), ./src/js/modules/insights/insights.model.js (referenced with cjs require), ./src/js/modules/instrument-details/components/InstrumentInfo.jsx (referenced with cjs require), ./src/js/modules/instrument-details/instrumentDetailsView.js (referenced with cjs require), ./src/js/modules/instrument-details/tabs/tab.overview.js (referenced with cjs require), ./src/js/modules/instruments/components/PureButtonBuy.jsx (referenced with cjs require), ./src/js/modules/instruments/components/PureButtonSell.jsx (referenced with cjs require), ./src/js/modules/login/login.view.js (referenced with cjs require), ./src/js/modules/metatrader/base.model.js (referenced with cjs require), ./src/js/modules/metatrader/metatrader.password.view.js (referenced with cjs require), ./src/js/modules/metatrader/metatrader.popup.model.js (referenced with cjs require), ./src/js/modules/metatrader/metatrader.popup.view.js (referenced with cjs require), ./src/js/modules/metatrader/tabs/metatrader.accounts.model.js (referenced with cjs require), ./src/js/modules/metatrader/tabs/metatrader.accounts.view.js (referenced with cjs require), ./src/js/modules/metatrader/tabs/metatrader.add-account.model.js (referenced with cjs require), ./src/js/modules/metatrader/tabs/metatrader.add-account.view.js (referenced with cjs require), ./src/js/modules/metatrader/tabs/metatrader.bonuses.model.js (referenced with cjs require), ./src/js/modules/metatrader/tabs/metatrader.bonuses.view.js (referenced with cjs require), ./src/js/modules/metatrader/tabs/metatrader.deposit.model.js (referenced with cjs require), ./src/js/modules/metatrader/tabs/metatrader.deposit.view.js (referenced with cjs require), ./src/js/modules/metatrader/tabs/metatrader.funds-transfer.model.js (referenced with cjs require), ./src/js/modules/metatrader/tabs/metatrader.funds-transfer.view.js (referenced with cjs require), ./src/js/modules/metatrader/tabs/metatrader.leverage.model.js (referenced with cjs require), ./src/js/modules/metatrader/tabs/metatrader.leverage.view.js (referenced with cjs require), ./src/js/modules/mobile-navigation-menu/mobile.navigation.menu.view.js (referenced with cjs require), ./src/js/modules/new-order/calculation/direction.js (referenced with cjs require), ./src/js/modules/new-order/new.order.model.js (referenced with cjs require), ./src/js/modules/new-order/new.order.view.js (referenced with cjs require), ./src/js/modules/open-positions/close.multiply.positions.model.js (referenced with cjs require), ./src/js/modules/open-positions/close.position.popup.view.js (referenced with cjs require), ./src/js/modules/open-positions/instrument.positions.close.all.view.js (referenced with cjs require), ./src/js/modules/orders/close.multiply.orders.model.js (referenced with cjs require), ./src/js/modules/orders/instrument.orders.cancel.all.view.js (referenced with cjs require), ./src/js/modules/professional-trader/professional.trader.view.js (referenced with cjs require), ./src/js/modules/registration/steps/registration.steps.navigation.js (referenced with cjs require), ./src/js/modules/registration/steps/registration.steps.progress.view.js (referenced with cjs require), ./src/js/modules/registration/strategy/form-config/registration.form.config.finq.js (referenced with cjs require), ./src/js/modules/registration/strategy/form-config/registration.form.config.trade.live_markets.js (referenced with cjs require), ./src/js/modules/registration/strategy/form-config/registration.form.config.trade.trade_capital_markets.js (referenced with cjs require), ./src/js/modules/registration/strategy/form-config/registration.form.config.trade.v2.js (referenced with cjs require), ./src/js/modules/server/server.request.js (referenced with cjs require), ./src/js/modules/state-manager/conditions.js (referenced with cjs require), ./src/js/modules/state-manager/handlers.js (referenced with cjs require), ./src/js/modules/state-manager/popups.js (referenced with cjs require), ./src/js/modules/timezone/timezone.insert.js (referenced with cjs require), ./src/js/modules/trading-tools/tip.ranks.popup.mobile.view.js (referenced with cjs require), ./src/js/modules/user/user.credit.cards.js (referenced with cjs require), ./src/js/modules/user/user.data.js (referenced with cjs require), ./src/js/modules/user/user.model.js (referenced with cjs require), ./src/js/modules/user/user.price-alerts.js (referenced with cjs require), ./src/js/modules/verify/creditCardVerify/verify.popup.view.js (referenced with cjs require), ./src/js/modules/verify/verify.popup.view.js (referenced with cjs require), ./src/js/modules/webinars/backboneComponent/webinar.base.logic.js (referenced with cjs require), ./src/js/modules/webinars/backboneComponent/webinar.model.js (referenced with cjs require), ./src/js/router.js (referenced with cjs require), ./src/js/store/settings.js (referenced with cjs require), ./src/js/utils/country-data.js (referenced with cjs require), ./src/js/utils/eventos.js (referenced with cjs require), ./src/js/utils/livechat.js (referenced with cjs require), ./src/js/utils/rounding.js (referenced with cjs require), ./src/js/utils/timezone.js (referenced with cjs require)) */
/*! ModuleConcatenation bailout: Cannot concat with ./src/js/common/localization.js (<- Module is not an ECMAScript module) */
/*! ModuleConcatenation bailout: Cannot concat with ./src/js/common/sha1.js (<- Module is referenced from these modules with unsupported syntax: ./src/js/common/tracking.js (referenced with cjs require)) */
/*! ModuleConcatenation bailout: Cannot concat with ./src/js/core.js (<- Module is not an ECMAScript module) */
/*! ModuleConcatenation bailout: Cannot concat with ./src/js/modules/chart/components/ChartLoading.jsx */
/*! ModuleConcatenation bailout: Cannot concat with ./src/js/modules/chart/trading-view/BackboneEventsListener.js */
/*! ModuleConcatenation bailout: Cannot concat with ./src/js/modules/chart/trading-view/TradingViewDatafeed.js */
/*! ModuleConcatenation bailout: Cannot concat with ./src/js/modules/chart/trading-view/TradingViewLines.js */
/*! ModuleConcatenation bailout: Cannot concat with ./src/js/modules/chart/trading-view/TradingViewSettings.js */
/*! ModuleConcatenation bailout: Cannot concat with ./src/js/modules/chart/trading-view/TradingViewTimezones.js */
/*! ModuleConcatenation bailout: Cannot concat with ./src/js/modules/chart/trading-view/TradingViewTradingCentral.js */
/*! ModuleConcatenation bailout: Cannot concat with ./src/js/modules/deep-links/deep.link.consts.js */
/*! ModuleConcatenation bailout: Cannot concat with ./src/js/modules/deep-links/deep.link.selectors.js */
/*! ModuleConcatenation bailout: Cannot concat with ./src/js/modules/form/components/dropdown/Dropdown.js */
/*! ModuleConcatenation bailout: Cannot concat with ./src/js/modules/instruments/instruments.utils.js (<- Module is referenced from these modules with unsupported syntax: ./src/js/classes/instrument.model.js (referenced with cjs require)) */
/*! ModuleConcatenation bailout: Cannot concat with ./src/js/modules/new-order/types.js (<- Module is not an ECMAScript module) */
/*! ModuleConcatenation bailout: Cannot concat with ./src/js/modules/server/server.request.js (<- Module is not an ECMAScript module) */
/*! ModuleConcatenation bailout: Cannot concat with ./src/js/modules/themes/themes.dispatcher.js (<- Module is not an ECMAScript module) */
/*! ModuleConcatenation bailout: Cannot concat with ./src/js/modules/trading-central/trading-central.consts.js (<- Module is referenced from these modules with unsupported syntax: ./src/js/modules/chart/highcharts/chart-panel/chart.panel.view.js (referenced with cjs require), ./src/js/modules/chart/highcharts/trading-central-settings/trading.central.settings.popup.view.js (referenced with cjs require)) */
/*! ModuleConcatenation bailout: Cannot concat with ./src/js/modules/trading-central/trading-central.reducer.js */
/*! ModuleConcatenation bailout: Cannot concat with ./src/js/modules/user/user.model.js (<- Module is not an ECMAScript module) */
/*! ModuleConcatenation bailout: Cannot concat with ./src/js/store/instruments.js (<- Module is not an ECMAScript module) */
/*! ModuleConcatenation bailout: Cannot concat with ./src/js/store/settings.js (<- Module is not an ECMAScript module) */
/*! ModuleConcatenation bailout: Cannot concat with ./src/js/store/ui.selectors.js (<- Module is referenced from these modules with unsupported syntax: ./src/js/modules/chart/highcharts/chart-panel/chart.panel.main.view.js (referenced with cjs require), ./src/js/modules/chart/highcharts/chart-panel/chart.panel.view.js (referenced with cjs require), ./src/js/modules/instrument-details/instrumentDetailsView.js (referenced with cjs require), ./src/js/modules/instrument-details/tabs/tab.overview.js (referenced with cjs require), ./src/js/modules/instrument-details/tabs/tab.positions.orders.js (referenced with cjs require), ./src/js/modules/instrument-details/tabs/tab.related.instruments.js (referenced with cjs require), ./src/js/modules/instruments-tree/instruments.tree.popup.view.js (referenced with cjs require)) */
/*! ModuleConcatenation bailout: Cannot concat with ./src/js/utils/response.js (<- Module is referenced from these modules with unsupported syntax: ./src/js/modules/accountinfo/accountInfoView.js (referenced with cjs require), ./src/js/modules/accountinfo/advanced.account-info.view.js (referenced with cjs require), ./src/js/modules/app/app.view.js (referenced with cjs require), ./src/js/modules/blog/index.js (referenced with cjs require), ./src/js/modules/bonus/active-bonus-progress-bar/active.bonus.progress.bar.view.js (referenced with cjs require), ./src/js/modules/chart/highcharts/chart-panel/chart.panel.view.js (referenced with cjs require), ./src/js/modules/chart/highcharts/chart.toolbar.view.js (referenced with cjs require), ./src/js/modules/chart/highcharts/chart.view.js (referenced with cjs require), ./src/js/modules/chart/highcharts/charts.configurator.js (referenced with cjs require), ./src/js/modules/chart/highcharts/instruments-comparison/comparison.instruments.collection.js (referenced with cjs require), ./src/js/modules/chart/highcharts/multi-charts/multi.charts.layouts.js (referenced with cjs require), ./src/js/modules/chart/highcharts/multi-charts/multi.charts.view.js (referenced with cjs require), ./src/js/modules/chart/highcharts/trading.central.view.js (referenced with cjs require), ./src/js/modules/events-bus/events.bus.js (referenced with cjs require), ./src/js/modules/grid/jsx/grid.cell.instrument.actions.jsx (referenced with cjs require), ./src/js/modules/grid/jsx/grid.cell.timestamp.jsx (referenced with cjs require), ./src/js/modules/grid/jsx/grid.jsx (referenced with cjs require), ./src/js/modules/header/header.view.js (referenced with cjs require), ./src/js/modules/insights/insights.hedgefunds.view.js (referenced with cjs require), ./src/js/modules/instrument-details/blend.view.js (referenced with cjs require), ./src/js/modules/instrument-details/instrumentDetailsView.js (referenced with cjs require), ./src/js/modules/instrument-details/tabs/tab.overview.js (referenced with cjs require), ./src/js/modules/mobile-navigation-menu/mobile.navigation.menu.view.js (referenced with cjs require), ./src/js/modules/new-order/custom.popup.view.js (referenced with cjs require), ./src/js/modules/new-order/new.order.interactive.view.js (referenced with cjs require), ./src/js/modules/new-order/new.order.view.js (referenced with cjs require), ./src/js/modules/new-position/new.position.popup.view.js (referenced with cjs require), ./src/js/modules/new-position/new.position.view.js (referenced with cjs require), ./src/js/modules/news-sentiment/initNewsSentimentView.js (referenced with cjs require), ./src/js/modules/open-positions/edit.position.popup.view.js (referenced with cjs require), ./src/js/modules/orders/edit.order.popup.view.js (referenced with cjs require), ./src/js/modules/professional-trader/professional.trader.view.js (referenced with cjs require), ./src/js/modules/registration/registration.view.js (referenced with cjs require), ./src/js/modules/state-manager/conditions.js (referenced with cjs require), ./src/js/modules/state-manager/handlers.js (referenced with cjs require), ./src/js/modules/state-manager/state.manager.js (referenced with cjs require), ./src/js/modules/tabs/tabs.view.js (referenced with cjs require), ./src/js/modules/tutorials/tutorials.popup.view.js (referenced with cjs require), ./src/js/modules/user/user.common.data.js (referenced with cjs require), ./src/js/modules/webinars/backboneComponent/feedback.view.js (referenced with cjs require), ./src/js/modules/webinars/backboneComponent/webinar.view.js (referenced with cjs require), ./src/js/modules/withdraw/withdraw.form.view.js (referenced with cjs require), ./src/js/router.js (referenced with cjs require)) */
/*! ModuleConcatenation bailout: Cannot concat with ./src/js/utils/timezone.js (<- Module is not an ECMAScript module) */
/*! ModuleConcatenation bailout: Cannot concat with ./src/vendors/charting_library.min.js (<- Module is not an ECMAScript module) */
/*! ModuleConcatenation bailout: Cannot concat with ./src/vendors/device.js (<- Module is referenced from these modules with unsupported syntax: ./src/js/modules/chart/highcharts/chart-panel/chart.panel.main.view.js (referenced with cjs require), ./src/js/modules/chart/highcharts/chart-panel/chart.panel.view.js (referenced with cjs require), ./src/js/modules/chart/highcharts/chart.view.js (referenced with cjs require), ./src/js/modules/chart/highcharts/charts.dispatcher.js (referenced with cjs require), ./src/js/modules/events-bus/events.bus.js (referenced with cjs require), ./src/js/modules/external-auth/strategies/facebook.js (referenced with cjs require), ./src/js/modules/form-wizard/wizard.stage.view.js (referenced with cjs require), ./src/js/modules/in-app-messaging/in.app.messaging.js (referenced with cjs require), ./src/js/modules/login-message/login.message.model.js (referenced with cjs require), ./src/js/modules/mobile-navigation-menu/mobile.navigation.menu.view.js (referenced with cjs require), ./src/js/modules/native-integration/android.js (referenced with cjs require), ./src/js/modules/notification-banner/notification.banner.view.js (referenced with cjs require), ./src/js/modules/price-alerts/priceAlerts.popup.view.js (referenced with cjs require), ./src/js/modules/professional-trader/professional.trader.form.config.js (referenced with cjs require), ./src/js/modules/registration/registration.view.js (referenced with cjs require), ./src/js/modules/ribbon-box/ribbon.box.view.js (referenced with cjs require), ./src/js/modules/webinars/backboneComponent/webinar.view.js (referenced with cjs require), ./src/js/store/settings.js (referenced with cjs require), ./src/js/utils/appsource.js (referenced with cjs require), ./src/js/utils/country-data.js (referenced with cjs require), ./src/js/utils/livechat.js (referenced with cjs require), multi underscore backbone highcharts/highstock highcharts/modules/exporting highcharts/modules/offline-exporting flatpickr moment react react-dom redux redux-thunk react-redux axios clone interact.js merge device numbro popper.js tooltip.js react-infinite-scroller react-custom-scrollbars (referenced with single entry)) */
/*! ModuleConcatenation bailout: Cannot concat with ./src/css/trading-view/index.scss (<- Module is not an ECMAScript module) */
/*! ModuleConcatenation bailout: Cannot concat with ./node_modules/react-autobind/index.js (<- Module is not an ECMAScript module) */
/*! ModuleConcatenation bailout: Cannot concat with ./node_modules/react-classset/classSet.js (<- Module is not an ECMAScript module) */
/*! ModuleConcatenation bailout: Cannot concat with ./node_modules/react-html-parser/lib/index.js (<- Module is not an ECMAScript module) */
/*! ModuleConcatenation bailout: Cannot concat with ./node_modules/react-redux/es/index.js (<- Module is referenced from these modules with unsupported syntax: ./src/js/modules/account-settings/tabs/tab.localization.js (referenced with cjs require), ./src/js/modules/account-settings/tabs/tab.trading.settings.js (referenced with cjs require), ./src/js/modules/account-settings/tabs/tab.view.settings.js (referenced with cjs require), ./src/js/modules/accountinfo/advanced.account-info.view.js (referenced with cjs require), ./src/js/modules/app/app.view.js (referenced with cjs require), ./src/js/modules/education/education.view.js (referenced with cjs require), ./src/js/modules/events-bus/events.bus.js (referenced with cjs require), ./src/js/modules/header/header.view.js (referenced with cjs require), ./src/js/modules/instrument-details/tabs/tab.positions.orders.js (referenced with cjs require), ./src/js/modules/instruments-tree/instruments.tree.popup.view.js (referenced with cjs require), ./src/js/modules/mobile-navigation-menu/mobile.navigation.menu.view.js (referenced with cjs require), ./src/js/modules/open-positions/instrument.positions.close.all.view.js (referenced with cjs require), ./src/js/modules/orders/instrument.orders.cancel.all.view.js (referenced with cjs require), ./src/js/modules/price-alerts/priceAlerts.view.js (referenced with cjs require), multi underscore backbone highcharts/highstock highcharts/modules/exporting highcharts/modules/offline-exporting flatpickr moment react react-dom redux redux-thunk react-redux axios clone interact.js merge device numbro popper.js tooltip.js react-infinite-scroller react-custom-scrollbars (referenced with single entry)) */
/*! ModuleConcatenation bailout: Cannot concat with ./node_modules/react/index.js (<- Module is not an ECMAScript module) */
/*! ModuleConcatenation bailout: Cannot concat with ./node_modules/reselect/es/index.js */
/*! ModuleConcatenation bailout: Cannot concat with ./node_modules/underscore/underscore.js (<- Module is not an ECMAScript module) */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n\n// EXTERNAL MODULE: ./node_modules/react/index.js\nvar react = __webpack_require__(\"./node_modules/react/index.js\");\nvar react_default = /*#__PURE__*/__webpack_require__.n(react);\n\n// EXTERNAL MODULE: ./node_modules/underscore/underscore.js\nvar underscore = __webpack_require__(\"./node_modules/underscore/underscore.js\");\nvar underscore_default = /*#__PURE__*/__webpack_require__.n(underscore);\n\n// EXTERNAL MODULE: ./src/js/common/localization.js\nvar localization = __webpack_require__(\"./src/js/common/localization.js\");\n\n// EXTERNAL MODULE: ./node_modules/react-autobind/index.js\nvar react_autobind = __webpack_require__(\"./node_modules/react-autobind/index.js\");\nvar react_autobind_default = /*#__PURE__*/__webpack_require__.n(react_autobind);\n\n// EXTERNAL MODULE: ./src/js/modules/chart/trading-view/BackboneEventsListener.js\nvar BackboneEventsListener = __webpack_require__(\"./src/js/modules/chart/trading-view/BackboneEventsListener.js\");\n\n// EXTERNAL MODULE: ./node_modules/react-classset/classSet.js\nvar classSet = __webpack_require__(\"./node_modules/react-classset/classSet.js\");\nvar classSet_default = /*#__PURE__*/__webpack_require__.n(classSet);\n\n// EXTERNAL MODULE: ./src/vendors/device.js\nvar device = __webpack_require__(\"./src/vendors/device.js\");\n\n// EXTERNAL MODULE: ./src/js/utils/response.js\nvar response = __webpack_require__(\"./src/js/utils/response.js\");\n\n// EXTERNAL MODULE: ./src/js/modules/form/components/dropdown/Dropdown.js\nvar Dropdown = __webpack_require__(\"./src/js/modules/form/components/dropdown/Dropdown.js\");\n\n// EXTERNAL MODULE: ./src/js/store/settings.js\nvar store_settings = __webpack_require__(\"./src/js/store/settings.js\");\nvar settings_default = /*#__PURE__*/__webpack_require__.n(store_settings);\n\n// EXTERNAL MODULE: ./src/js/common/sha1.js\nvar sha1 = __webpack_require__(\"./src/js/common/sha1.js\");\n\n// EXTERNAL MODULE: ./src/js/modules/themes/themes.dispatcher.js\nvar themes_dispatcher = __webpack_require__(\"./src/js/modules/themes/themes.dispatcher.js\");\nvar themes_dispatcher_default = /*#__PURE__*/__webpack_require__.n(themes_dispatcher);\n\n// EXTERNAL MODULE: ./src/js/modules/chart/trading-view/TradingViewDatafeed.js\nvar TradingViewDatafeed = __webpack_require__(\"./src/js/modules/chart/trading-view/TradingViewDatafeed.js\");\n\n// EXTERNAL MODULE: ./src/js/modules/user/user.model.js\nvar user_model = __webpack_require__(\"./src/js/modules/user/user.model.js\");\nvar user_model_default = /*#__PURE__*/__webpack_require__.n(user_model);\n\n// EXTERNAL MODULE: ./src/js/modules/chart/trading-view/TradingViewSettings.js\nvar TradingViewSettings = __webpack_require__(\"./src/js/modules/chart/trading-view/TradingViewSettings.js\");\n\n// EXTERNAL MODULE: ./src/js/modules/chart/trading-view/TradingViewTimezones.js + 1 modules\nvar TradingViewTimezones = __webpack_require__(\"./src/js/modules/chart/trading-view/TradingViewTimezones.js\");\n\n// EXTERNAL MODULE: ./src/js/store/ui.selectors.js\nvar ui_selectors = __webpack_require__(\"./src/js/store/ui.selectors.js\");\n\n// EXTERNAL MODULE: ./src/js/modules/deep-links/deep.link.selectors.js\nvar deep_link_selectors = __webpack_require__(\"./src/js/modules/deep-links/deep.link.selectors.js\");\n\n// EXTERNAL MODULE: ./src/vendors/charting_library.min.js\nvar charting_library_min = __webpack_require__(\"./src/vendors/charting_library.min.js\");\n\n// EXTERNAL MODULE: ./src/js/store/instruments.js\nvar instruments = __webpack_require__(\"./src/js/store/instruments.js\");\nvar instruments_default = /*#__PURE__*/__webpack_require__.n(instruments);\n\n// EXTERNAL MODULE: ./src/js/modules/server/server.request.js\nvar server_request = __webpack_require__(\"./src/js/modules/server/server.request.js\");\nvar server_request_default = /*#__PURE__*/__webpack_require__.n(server_request);\n\n// EXTERNAL MODULE: ./src/js/modules/instruments/instruments.utils.js\nvar instruments_utils = __webpack_require__(\"./src/js/modules/instruments/instruments.utils.js\");\n\n// EXTERNAL MODULE: ./src/css/trading-view/index.scss\nvar trading_view = __webpack_require__(\"./src/css/trading-view/index.scss\");\nvar trading_view_default = /*#__PURE__*/__webpack_require__.n(trading_view);\n\n// EXTERNAL MODULE: ./src/js/modules/chart/trading-view/ChartTradingView.scss\nvar trading_view_ChartTradingView = __webpack_require__(\"./src/js/modules/chart/trading-view/ChartTradingView.scss\");\n\n// EXTERNAL MODULE: ./src/js/modules/deep-links/deep.link.consts.js\nvar deep_link_consts = __webpack_require__(\"./src/js/modules/deep-links/deep.link.consts.js\");\n\n// EXTERNAL MODULE: ./src/js/modules/chart/trading-view/TradingViewLines.js\nvar TradingViewLines = __webpack_require__(\"./src/js/modules/chart/trading-view/TradingViewLines.js\");\n\n// EXTERNAL MODULE: ./src/js/common.types.js\nvar common_types = __webpack_require__(\"./src/js/common.types.js\");\n\n// EXTERNAL MODULE: ./src/js/core.js\nvar core = __webpack_require__(\"./src/js/core.js\");\nvar core_default = /*#__PURE__*/__webpack_require__.n(core);\n\n// EXTERNAL MODULE: ./src/js/modules/new-order/types.js\nvar types = __webpack_require__(\"./src/js/modules/new-order/types.js\");\n\n// EXTERNAL MODULE: ./node_modules/react-redux/es/index.js + 14 modules\nvar es = __webpack_require__(\"./node_modules/react-redux/es/index.js\");\n\n// EXTERNAL MODULE: ./src/js/utils/timezone.js\nvar timezone = __webpack_require__(\"./src/js/utils/timezone.js\");\nvar timezone_default = /*#__PURE__*/__webpack_require__.n(timezone);\n\n// EXTERNAL MODULE: ./node_modules/react-html-parser/lib/index.js\nvar lib = __webpack_require__(\"./node_modules/react-html-parser/lib/index.js\");\nvar lib_default = /*#__PURE__*/__webpack_require__.n(lib);\n\n// EXTERNAL MODULE: ./node_modules/reselect/es/index.js\nvar reselect_es = __webpack_require__(\"./node_modules/reselect/es/index.js\");\n\n// EXTERNAL MODULE: ./src/js/modules/trading-central/trading-central.reducer.js\nvar trading_central_reducer = __webpack_require__(\"./src/js/modules/trading-central/trading-central.reducer.js\");\n\n// CONCATENATED MODULE: ./src/js/modules/trading-central/trading-central.selectors.js\n\n\n\n\n\nvar getSymbol = function getSymbol(state, symbol, term) {\n    return symbol;\n};\nvar getTerm = function getTerm(state, symbol, term) {\n    return term;\n};\n\nvar trading_central_selectors_getTradingCentralSettings = function getTradingCentralSettings() {\n    return user_model_default.a.getUserCommonData().getTradingCentralSettings();\n};\n\nvar getTradingCentral = function getTradingCentral(state) {\n    return state.tradingCentral;\n};\n\nvar getTradingCentralObject = Object(reselect_es[\"createSelector\"])([getTradingCentral, getSymbol, getTerm], function (tradingCentral, symbol, term) {\n    return tradingCentral[Object(trading_central_reducer[\"getId\"])(symbol, term)];\n});\n\nvar getTradingCentralStatus = Object(reselect_es[\"createSelector\"])([getTradingCentralObject], function (tradingCentralObject) {\n    return tradingCentralObject && tradingCentralObject.status;\n});\n\nvar getTradingCentralData = Object(reselect_es[\"createSelector\"])([getTradingCentralObject], function (tradingCentralObject) {\n    return tradingCentralObject && tradingCentralObject.data;\n});\n// EXTERNAL MODULE: ./src/js/modules/chart/components/ChartLoading.jsx\nvar ChartLoading = __webpack_require__(\"./src/js/modules/chart/components/ChartLoading.jsx\");\n\n// CONCATENATED MODULE: ./src/js/modules/trading-central/components/TradingCental.jsx\nvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n\n\n\n\n\n\n\n\n\n\nvar FORMAT_IN = 'YYYYMMDDHH:mm';\nvar FORMAT_OUT = 'DD/MM/YYYY HH:mm';\n\nvar TradingCental_mapState = function mapState(state, _ref) {\n    var symbol = _ref.symbol,\n        term = _ref.term;\n\n    return {\n        data: getTradingCentralData(state, symbol, term),\n        status: getTradingCentralStatus(state, symbol, term),\n        settings: trading_central_selectors_getTradingCentralSettings(state)\n    };\n};\n\nvar TradingCental_TradingCentral = function (_React$Component) {\n    _inherits(TradingCentral, _React$Component);\n\n    function TradingCentral() {\n        _classCallCheck(this, TradingCentral);\n\n        return _possibleConstructorReturn(this, (TradingCentral.__proto__ || Object.getPrototypeOf(TradingCentral)).apply(this, arguments));\n    }\n\n    _createClass(TradingCentral, [{\n        key: 'formatLegendLine',\n        value: function formatLegendLine(key, color) {\n            return lib_default()(__(key), {\n                preprocessNodes: function preprocessNodes(nodes) {\n                    underscore_default.a.each(nodes, function (node) {\n                        if (node.name === 'span' && node.children) {\n                            node.attribs = {\n                                style: 'color:' + color\n                            };\n                        }\n                    });\n\n                    return nodes;\n                }\n            });\n        }\n    }, {\n        key: 'render',\n        value: function render() {\n            var status = this.props.status;\n\n\n            if (!status) {\n                return null;\n            }\n\n            switch (status) {\n                case common_types[\"LOADING\"]:\n                    {\n                        var classNames = classSet_default()(_defineProperty({\n                            'chart-trading-central tc': true,\n                            'tc-loading': true\n                        }, this.props.className, !!this.props.className));\n\n                        return react_default.a.createElement(\n                            'div',\n                            { className: classNames },\n                            react_default.a.createElement(\n                                'div',\n                                { className: 'tc-wrapper' },\n                                react_default.a.createElement(ChartLoading[\"default\"], null)\n                            )\n                        );\n                    }\n\n                case common_types[\"ERROR\"]:\n                    {\n                        var _classNames = classSet_default()(_defineProperty({\n                            'chart-trading-central tc': true,\n                            'tc-instrument-unavailable': true\n                        }, this.props.className, !!this.props.className));\n\n                        return react_default.a.createElement(\n                            'div',\n                            { className: _classNames },\n                            react_default.a.createElement(\n                                'div',\n                                { className: 'tc-wrapper' },\n                                __('trading.central.unavailable.description')\n                            )\n                        );\n                    }\n\n                case common_types[\"SUCCESS\"]:\n                    {\n                        var _props = this.props,\n                            data = _props.data,\n                            settings = _props.settings;\n                        var title = data.title,\n                            date = data.date,\n                            hour = data.hour,\n                            paragraphs = data.paragraphs,\n                            term = data.term,\n                            pivot = data.pivot,\n                            resistance1 = data.resistance1,\n                            support1 = data.support1;\n\n                        var _settings$lines = _slicedToArray(settings.lines, 3),\n                            _settings$lines$0$col = _slicedToArray(_settings$lines[0].colors, 1),\n                            resistanceColor = _settings$lines$0$col[0],\n                            _settings$lines$1$col = _slicedToArray(_settings$lines[1].colors, 1),\n                            supportColor = _settings$lines$1$col[0],\n                            _settings$lines$2$col = _slicedToArray(_settings$lines[2].colors, 1),\n                            pivotColor = _settings$lines$2$col[0];\n\n                        var header = __('trading.central.preference.title') + ' ' + __('trading.central.term.' + term.toLowerCase());\n\n                        if (pivot === resistance1) {\n                            header += ' ' + __('trading.central.preference.decline');\n                        } else if (pivot === support1) {\n                            header += ' ' + __('trading.central.preference.rise');\n                        }\n\n                        var datetime = timezone_default.a.user.applyOffset('' + date + hour, FORMAT_IN, FORMAT_OUT) + ' (' + timezone_default.a.user.GMTPostfix() + ')';\n\n                        var _classNames2 = classSet_default()(_defineProperty({\n                            'chart-trading-central tc': true\n                        }, this.props.className, !!this.props.className));\n\n                        return react_default.a.createElement(\n                            'div',\n                            { className: _classNames2 },\n                            react_default.a.createElement(\n                                'div',\n                                { className: 'tc-wrapper' },\n                                react_default.a.createElement(\n                                    'div',\n                                    { className: 'tc-info' },\n                                    react_default.a.createElement(\n                                        'div',\n                                        { className: 'tc-header' },\n                                        header\n                                    ),\n                                    react_default.a.createElement(\n                                        'div',\n                                        null,\n                                        title\n                                    ),\n                                    underscore_default.a.map(paragraphs, function (paragraph, index) {\n                                        return react_default.a.createElement(\n                                            'div',\n                                            { key: 'tc-p-' + index },\n                                            paragraph\n                                        );\n                                    }),\n                                    react_default.a.createElement(\n                                        'div',\n                                        null,\n                                        datetime\n                                    )\n                                ),\n                                react_default.a.createElement(\n                                    'div',\n                                    { className: 'tc-legend-full' },\n                                    react_default.a.createElement(\n                                        'div',\n                                        { className: 'tc-header' },\n                                        lib_default()(__('trading.central.study.legend'))\n                                    ),\n                                    react_default.a.createElement(\n                                        'div',\n                                        { className: 'tc-resistance' },\n                                        this.formatLegendLine('trading.central.lines.extended.resistance', resistanceColor)\n                                    ),\n                                    react_default.a.createElement(\n                                        'div',\n                                        { className: 'tc-support' },\n                                        this.formatLegendLine('trading.central.lines.extended.support', supportColor)\n                                    ),\n                                    react_default.a.createElement(\n                                        'div',\n                                        { className: 'tc-pivot' },\n                                        this.formatLegendLine('trading.central.lines.extended.pivot', pivotColor)\n                                    )\n                                )\n                            )\n                        );\n                    }\n            }\n        }\n    }]);\n\n    return TradingCentral;\n}(react_default.a.Component);\n\n/* harmony default export */ var TradingCental = (Object(es[\"connect\"])(TradingCental_mapState)(TradingCental_TradingCentral));\n// EXTERNAL MODULE: ./src/js/modules/chart/trading-view/TradingViewTradingCentral.js + 1 modules\nvar TradingViewTradingCentral = __webpack_require__(\"./src/js/modules/chart/trading-view/TradingViewTradingCentral.js\");\n\n// EXTERNAL MODULE: ./src/js/modules/trading-central/trading-central.consts.js\nvar trading_central_consts = __webpack_require__(\"./src/js/modules/trading-central/trading-central.consts.js\");\n\n// CONCATENATED MODULE: ./src/js/modules/chart/trading-view/components/ChartTradingView.js\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar ChartTradingView_createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction ChartTradingView_defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\nfunction ChartTradingView_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction ChartTradingView_possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction ChartTradingView_inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nvar CHART_REF_KEY = 'tvWidget';\n\nvar MOBILE_LANDSCAPE = 'mobile-landscape';\nvar MOBILE_PORTRAIT = 'mobile-portrait';\n\nvar MIN_VIEWPORT_HEIGHT = 500;\nvar CHART_NAME = 'main';\nvar STORAGE_KEY = 'tv_local';\n\nvar CHART_CLASSNAME = 'main-chart';\n\nvar DEPRECATED_SOURCES = [TradingViewTradingCentral[\"TRADING_CENTRAL_NAME\"]];\n\ncharting_library_min[\"widget\"].prototype.documentElement = function () {\n    return this._innerWindow().document.documentElement;\n};\n\ncharting_library_min[\"widget\"].prototype.forEachChart = function (func) {\n    for (var index = 0, len = this.chartsCount(); index < len; index++) {\n        func(this.chart(index), index);\n    }\n};\n\nvar ChartTradingView_ChartTradingView = function (_React$Component) {\n    ChartTradingView_inherits(ChartTradingView, _React$Component);\n\n    function ChartTradingView(props) {\n        ChartTradingView_classCallCheck(this, ChartTradingView);\n\n        var _this = ChartTradingView_possibleConstructorReturn(this, (ChartTradingView.__proto__ || Object.getPrototypeOf(ChartTradingView)).call(this, props));\n\n        react_autobind_default()(_this);\n\n        _this.save = underscore[\"debounce\"](_this.save, 1000);\n\n        _this.state = {\n            ready: false,\n            minimized: device[\"default\"].mobile() && device[\"default\"].portrait() && window.innerHeight < MIN_VIEWPORT_HEIGHT,\n            sidebarCollapsed: false\n        };\n        return _this;\n    }\n\n    ChartTradingView_createClass(ChartTradingView, [{\n        key: 'componentDidMount',\n        value: function componentDidMount() {\n            this._mounted = true;\n            this.symbol = this.props.symbol || ChartTradingView.getSelectedInstrumentSymbol();\n\n            var _props = this.props,\n                clientId = _props.client_id,\n                userId = _props.user_id;\n\n\n            server_request_default.a.getTradingViewSavedCharts(clientId, userId).then(this.onSavedChartsLoaded).catch(this.onSavedChartsLoaded);\n        }\n    }, {\n        key: 'onSavedChartsLoaded',\n        value: function onSavedChartsLoaded(_ref) {\n            var chartsResp = _ref.data,\n                status = _ref.status;\n\n            this.serverError = status !== 200;\n\n            if (this.serverError) {\n                var localSavedChart = localStorage.getItem(STORAGE_KEY);\n\n                if (localSavedChart) {\n                    this.onSavedChartLoaded(ChartTradingView.prepareLocalSavedChart(localSavedChart));\n                } else {\n                    this.initTradingViewWidget();\n                }\n\n                return;\n            }\n\n            if (!chartsResp.data || chartsResp.data.length === 0) {\n                this.initTradingViewWidget();\n\n                return;\n            }\n\n            var savedCharts = underscore[\"chain\"](chartsResp.data).filter(function (_ref2) {\n                var name = _ref2.name;\n                return name.indexOf(CHART_NAME) === 0;\n            }).sortBy('timestamp').value();\n\n            if (underscore[\"isEmpty\"](savedCharts)) {\n                this.initTradingViewWidget();\n\n                return;\n            }\n\n            var _props2 = this.props,\n                clientId = _props2.client_id,\n                userId = _props2.user_id;\n\n\n            underscore[\"each\"](underscore[\"initial\"](savedCharts), function (chart) {\n                return server_request_default.a.deleteTradingViewSavedChart(clientId, userId, chart.id);\n            });\n\n            server_request_default.a.getTradingViewSavedChart(clientId, userId, underscore[\"last\"](savedCharts).id).then(this.onSavedChartLoaded);\n        }\n    }, {\n        key: 'onSavedChartLoaded',\n        value: function onSavedChartLoaded(_ref3) {\n            var _ref3$data$data = _ref3.data.data,\n                id = _ref3$data$data.id,\n                name = _ref3$data$data.name,\n                content = _ref3$data$data.content;\n\n            try {\n                var chartContent = JSON.parse(content);\n                var savedData = JSON.parse(chartContent.content);\n\n                if (!settings_default.a.isChartTradingViewMultichartsEnabled()) {\n                    savedData.layout = 's';\n                }\n\n                for (var charts = savedData.charts, chartIndex = charts.length - 1; chartIndex >= 0; chartIndex--) {\n                    var chart = charts[chartIndex];\n\n                    delete chart.timezone;\n\n                    for (var panes = chart.panes, paneIndex = panes.length - 1; paneIndex >= 0; paneIndex--) {\n                        var pane = panes[paneIndex];\n\n                        for (var sources = pane.sources, sourceIndex = sources.length - 1; sourceIndex >= 0; sourceIndex--) {\n                            var source = sources[sourceIndex];\n\n                            if (source.type === 'MainSeries') {\n                                source.state.symbol = this.symbol;\n\n                                if (chartIndex === 0) {\n                                    var deepLinkInterval = ChartTradingView.getDeepLinkInterval();\n\n                                    if (deepLinkInterval) {\n                                        source.state.interval = deepLinkInterval;\n                                    }\n\n                                    if (!TradingViewSettings[\"RESOLUTION_TO_PERIOD_MAP\"][source.state.interval]) {\n                                        source.state.interval = this.props.interval;\n                                    }\n                                }\n                            }\n\n                            if (DEPRECATED_SOURCES.indexOf(source.state.description) >= 0) {\n                                sources.splice(sourceIndex, 1);\n                            }\n                        }\n\n                        if (!pane.sources.length) {\n                            panes.splice(paneIndex, 1);\n                        }\n                    }\n                }\n\n                this.initTradingViewWidget(id, name.split('_')[1], savedData);\n            } catch (e) {\n                this.initTradingViewWidget();\n            }\n        }\n    }, {\n        key: 'initTradingViewWidget',\n        value: function initTradingViewWidget(chartId, savedTheme, savedData, style) {\n            var _this2 = this;\n\n            if (!this._mounted) {\n                return;\n            }\n\n            this.chartId = chartId;\n            this.theme = themes_dispatcher_default.a.isLightTheme() ? TradingViewSettings[\"THEMES\"].LIGHT : TradingViewSettings[\"THEMES\"].DARK;\n            this.themeChanged = savedTheme !== this.theme;\n\n            this.tvDatafeed = new TradingViewDatafeed[\"default\"]();\n            this.tvDatafeed.on(TradingViewDatafeed[\"EVENTS\"].LOAD, this.onDataLoaded);\n\n            this.tvWidget = new charting_library_min[\"widget\"](_extends({}, this.props, {\n                symbol: this.symbol,\n                container_id: this.refs[CHART_REF_KEY].id,\n                datafeed: this.tvDatafeed,\n                theme: this.theme,\n                overrides: _extends({}, TradingViewSettings[\"OVERRIDES\"][this.theme], style && { 'mainSeriesProperties.style': style }),\n                studies_overrides: TradingViewSettings[\"STUDIES_OVERRIDES\"][this.theme],\n                loading_screen: {\n                    backgroundColor: TradingViewSettings[\"LOADING_BACKGROUND\"][this.theme]\n                }\n            }, response[\"default\"].mobile() && {\n                disabled_features: [].concat(_toConsumableArray(this.props.disabled_features), _toConsumableArray(TradingViewSettings[\"FEATURES\"].MOBILE.DISABLED))\n            }, settings_default.a.isChartTradingViewMultichartsEnabled() && {\n                enabled_features: [].concat(_toConsumableArray(this.props.enabled_features), ['header_layouttoggle', 'support_multicharts'])\n            }, savedData && {\n                saved_data: savedData\n            }, !savedData && {\n                interval: ChartTradingView.getDeepLinkInterval() || this.props.interval\n            }));\n\n            this.tvTradingCentral = new TradingViewTradingCentral[\"default\"](this.tvWidget);\n\n            this.tvEventsListener = BackboneEventsListener[\"default\"].create({\n                onThemeChanged: function onThemeChanged(name) {\n                    _this2.theme = name;\n                    _this2.changeTheme(name);\n\n                    underscore[\"each\"](_this2.positions, function (position) {\n                        return position.changeTheme(name);\n                    });\n                    underscore[\"each\"](_this2.orders, function (order) {\n                        return order.changeTheme(name);\n                    });\n                },\n                onInstrumentRowSelected: function onInstrumentRowSelected(symbol) {\n                    if (_this2.state.ready) {\n                        if (symbol !== _this2.symbol) {\n                            _this2.setSymbol(symbol);\n                        }\n                    } else {\n                        _this2.tempSymbol = symbol;\n                    }\n                }\n            });\n\n            this.tvEventsListener.listenTo(core_default.a, trading_central_consts[\"TC_SETTINGS_UPDATE_EVENT\"], this.onTradingCentralStatusChanged);\n\n            this.tvWidget.onChartReady(this.onChartReady);\n        }\n    }, {\n        key: 'setSymbol',\n        value: function setSymbol(symbol) {\n            var _this3 = this;\n\n            this.symbol = symbol;\n\n            this.removeTradings(this.getInstrument());\n            this.removeTradingCentral();\n\n            this.tvWidget.forEachChart(function (chart) {\n                return chart.setSymbol(symbol, function () {\n                    return _this3.save();\n                });\n            });\n        }\n    }, {\n        key: 'onDataLoaded',\n        value: function onDataLoaded(id, symbol, resolution) {\n            var _this4 = this;\n\n            if (symbol === this.symbol) {\n                var instrument = this.tvDatafeed.getSubscription(symbol, resolution).getInstrument();\n\n                this.tvWidget.forEachChart(function (chart, index) {\n                    if (chart.resolution() === resolution) {\n                        _this4.initTradings(instrument, chart);\n\n                        if (index === 0) {\n                            _this4.initTradingCentral(instrument, resolution, chart);\n                        }\n                    }\n                });\n            }\n        }\n    }, {\n        key: 'onChartReady',\n        value: function onChartReady() {\n            var _this5 = this;\n\n            var tvDocument = this.tvWidget.documentElement();\n            var tvChart = this.tvWidget.chart();\n\n            Object(TradingViewSettings[\"setChartClassName\"])(this.tvWidget, CHART_CLASSNAME);\n            Object(TradingViewSettings[\"setMultichartsLayoutClassName\"])(this.tvWidget);\n            Object(TradingViewSettings[\"updateMultichartsTradingCentalWarning\"])(this.tvWidget);\n\n            if (this.themeChanged) {\n                this.changeTheme(this.theme);\n            }\n\n            Object(TradingViewSettings[\"fixUI\"])(tvDocument);\n\n            this.updateIntervalDropdown();\n\n            if (response[\"default\"].mobile()) {\n                Object(TradingViewSettings[\"collapseTooltip\"])(tvDocument);\n                this.initOrientationHandler();\n            }\n\n            if (this.chartId) {\n                this.tvWidget._innerAPI()._chartWidgetCollection.metaInfo.id.setValue(this.chartId);\n                this.tvWidget._innerAPI()._chartWidgetCollection.metaInfo.uid.setValue(this.chartId);\n                this.tvWidget._innerAPI()._chartWidgetCollection.metaInfo.name.setValue(CHART_NAME);\n            }\n\n            this.tvWidget.onContextMenu(this.onContextMenu);\n\n            this.setState({ ready: true });\n\n            if (Object(deep_link_selectors[\"getDeepLinkPath\"])(store.getState(), true) === deep_link_consts[\"PATH\"].INDICATORS) {\n                tvDocument.querySelector('#header-toolbar-indicators').click();\n            }\n\n            this.tvWidget.subscribe('onAutoSaveNeeded', function () {\n                _this5.save();\n            });\n\n            tvChart.onSymbolChanged().subscribe(null, function () {\n                _this5.save();\n            });\n\n            tvChart.onIntervalChanged().subscribe(null, function () {\n                _this5.save();\n                _this5.updateIntervalDropdown();\n            });\n\n            this.tvWidget.subscribe('toggle_sidebar', function (sidebarCollapsed) {\n                _this5.setState({ sidebarCollapsed: sidebarCollapsed });\n            });\n\n            this.tvWidget.subscribe('layout_changed', function () {\n                Object(TradingViewSettings[\"setMultichartsLayoutClassName\"])(_this5.tvWidget);\n                Object(TradingViewSettings[\"updateMultichartsTradingCentalWarning\"])(_this5.tvWidget);\n\n                _this5.removeTradings(_this5.getInstrument());\n\n                _this5.tvWidget.forEachChart(function (chart, index) {\n                    chart.dataReady(function () {\n                        return _this5.initTradings(_this5.getInstrument(), chart);\n                    });\n\n                    if (index > 0) {\n                        _this5.tvTradingCentral.remove(chart);\n                    }\n                });\n            });\n\n            if (this.tempSymbol) {\n                this.setSymbol(this.tempSymbol);\n                delete this.tempSymbol;\n            }\n        }\n    }, {\n        key: 'getInstrument',\n        value: function getInstrument() {\n            var symbol = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.tvWidget.symbolInterval().symbol;\n\n            return instruments_default.a.getInstrumentBySymbol(symbol);\n        }\n    }, {\n        key: 'onContextMenu',\n        value: function onContextMenu(timestamp, price) {\n            if (!price) {\n                return;\n            }\n\n            var _tvWidget$symbolInter = this.tvWidget.symbolInterval(),\n                symbol = _tvWidget$symbolInter.symbol,\n                resolution = _tvWidget$symbolInter.interval;\n\n            var subscription = this.tvDatafeed.getSubscription(symbol, resolution);\n\n            if (subscription) {\n\n                var lastPrice = subscription.getLastCandle().close;\n                var instrument = subscription.getInstrument();\n                var displayName = instrument.getDisplayName();\n                var precision = instrument.getPrecision();\n                var selectedPrice = price.toFixed(precision);\n\n                var menu = [];\n\n                var buyTradable = Object(instruments_utils[\"isBuyTradable\"])(symbol);\n                var sellTradable = Object(instruments_utils[\"isSellTradable\"])(symbol);\n\n                if (+selectedPrice < lastPrice) {\n                    if (buyTradable) {\n                        menu.push({\n                            position: 'top',\n                            text: __('actions.buy') + ' ' + displayName + ' ' + __('type.LIMIT') + ' ' + selectedPrice,\n                            click: function click() {\n                                ChartTradingView.trade(symbol, {\n                                    direction: common_types[\"BUY\"],\n                                    type: types[\"TYPE_LIMIT\"],\n                                    entry: selectedPrice\n                                });\n                            }\n                        });\n                    }\n\n                    if (sellTradable) {\n                        menu.push({\n                            position: 'top',\n                            text: __('actions.sell') + ' ' + displayName + ' ' + __('type.STOP') + ' ' + selectedPrice,\n                            click: function click() {\n                                ChartTradingView.trade(symbol, {\n                                    direction: common_types[\"SELL\"],\n                                    type: types[\"TYPE_STOP\"],\n                                    entry: selectedPrice\n                                });\n                            }\n                        });\n                    }\n                } else if (+selectedPrice > lastPrice) {\n                    if (sellTradable) {\n                        menu.push({\n                            position: 'top',\n                            text: __('actions.sell') + ' ' + displayName + ' ' + __('type.LIMIT') + ' ' + selectedPrice,\n                            click: function click() {\n                                ChartTradingView.trade(symbol, {\n                                    direction: common_types[\"SELL\"],\n                                    type: types[\"TYPE_LIMIT\"],\n                                    entry: selectedPrice\n                                });\n                            }\n                        });\n                    }\n\n                    if (buyTradable) {\n                        menu.push({\n                            position: 'top',\n                            text: __('actions.buy') + ' ' + displayName + ' ' + __('type.STOP') + ' ' + selectedPrice,\n                            click: function click() {\n                                ChartTradingView.trade(symbol, {\n                                    direction: common_types[\"BUY\"],\n                                    type: types[\"TYPE_STOP\"],\n                                    entry: selectedPrice\n                                });\n                            }\n                        });\n                    }\n                }\n\n                if (buyTradable) {\n                    menu.push({\n                        position: 'top',\n                        text: __('actions.buy') + ' ' + displayName + ' ' + __('type.MARKET'),\n                        click: function click() {\n                            ChartTradingView.trade(symbol, {\n                                direction: common_types[\"BUY\"]\n                            });\n                        }\n                    });\n                }\n\n                if (sellTradable) {\n                    menu.push({\n                        position: 'top',\n                        text: __('actions.sell') + ' ' + displayName + ' ' + __('type.MARKET'),\n                        click: function click() {\n                            ChartTradingView.trade(symbol, {\n                                direction: common_types[\"SELL\"]\n                            });\n                        }\n                    });\n                }\n\n                if (menu.length > 0) {\n                    menu.push({ text: '-', position: 'top' });\n                }\n\n                return menu;\n            }\n        }\n    }, {\n        key: 'updateIntervalDropdown',\n        value: function updateIntervalDropdown() {\n            this.setState({\n                period: TradingViewSettings[\"RESOLUTION_TO_PERIOD_MAP\"][this.tvWidget.symbolInterval().interval]\n            });\n        }\n    }, {\n        key: 'onOrientationChanged',\n        value: function onOrientationChanged() {\n            if (device[\"default\"].portrait()) {\n                this.tvWidget.documentElement().classList.replace(MOBILE_PORTRAIT, MOBILE_LANDSCAPE);\n            } else {\n                this.tvWidget.documentElement().classList.replace(MOBILE_LANDSCAPE, MOBILE_PORTRAIT);\n            }\n        }\n    }, {\n        key: 'initOrientationHandler',\n        value: function initOrientationHandler() {\n            var orieantationHadler = this.onOrientationChanged;\n            var orientationEvent = Object.prototype.hasOwnProperty.call(window, 'onorientationchange') ? 'orientationchange' : 'resize';\n\n            if (window.addEventListener) {\n                window.addEventListener(orientationEvent, orieantationHadler, false);\n            } else if (window.attachEvent) {\n                window.attachEvent(orientationEvent, orieantationHadler);\n            } else {\n                window[orientationEvent] = orieantationHadler;\n            }\n\n            this.tvWidget.documentElement().classList.add(device[\"default\"].landscape() ? MOBILE_LANDSCAPE : MOBILE_PORTRAIT);\n        }\n    }, {\n        key: 'save',\n        value: function save() {\n            var _this6 = this;\n\n            if (!this.tvWidget) {\n                return;\n            }\n\n            if (this.serverError) {\n                this.tvWidget.save(function (content) {\n                    localStorage.setItem(STORAGE_KEY, JSON.stringify({\n                        name: _this6.getChartName(),\n                        content: JSON.stringify({\n                            content: JSON.stringify(content)\n                        })\n                    }));\n                });\n            } else {\n                this.tvWidget.saveChartToServer(function () {}, function () {}, false, { chartName: this.getChartName() });\n            }\n        }\n    }, {\n        key: 'getChartName',\n        value: function getChartName() {\n            return CHART_NAME + '_' + this.theme;\n        }\n    }, {\n        key: 'changeTheme',\n        value: function changeTheme(theme) {\n            this.tvWidget.changeTheme(theme);\n            this.tvWidget.applyOverrides(TradingViewSettings[\"OVERRIDES\"][theme]);\n            this.tvWidget.applyStudiesOverrides(TradingViewSettings[\"STUDIES_OVERRIDES\"][theme]);\n        }\n    }, {\n        key: 'componentWillUnmount',\n        value: function componentWillUnmount() {\n            this._mounted = false;\n\n            if (this.tvEventsListener) {\n                this.tvEventsListener.destroy();\n                this.tvEventsListener = null;\n            }\n\n            if (this.tvDatafeed) {\n                this.tvDatafeed.destroy();\n                this.tvDatafeed = null;\n            }\n\n            if (this.tvTradingCentral) {\n                this.tvTradingCentral.destroy();\n                this.tvTradingCentral = null;\n            }\n\n            underscore[\"each\"](this.positions, function (position) {\n                return position.remove();\n            });\n            underscore[\"each\"](this.orders, function (orders) {\n                return orders.remove();\n            });\n\n            if (this.tvWidget) {\n                if (this.tvWidget._getIFrameElement() && !this.tvWidget._getIFrameElement().contentWindow.ChartApiInstance) {\n                    this.tvWidget._getIFrameElement().contentWindow.ChartApiInstance = {\n                        destroy: function destroy() {}\n                    };\n                }\n\n                if (this.tvWidget._getIFrameElement() && !this.tvWidget._getIFrameElement().contentWindow.destroyChart) {\n                    this.tvWidget._getIFrameElement().contentWindow.destroyChart = function () {};\n                }\n\n                this.tvWidget.remove();\n                this.tvWidget = null;\n            }\n        }\n    }, {\n        key: 'minimize',\n        value: function minimize() {\n            this.setState({\n                minimized: true\n            });\n        }\n    }, {\n        key: 'restoreSize',\n        value: function restoreSize() {\n            this.setState({\n                minimized: false\n            });\n        }\n    }, {\n        key: 'changeInterval',\n        value: function changeInterval(period) {\n            this.tvWidget.setSymbol(this.tvWidget.symbolInterval().symbol, TradingViewSettings[\"PERIOD_TO_RESOLUTION_MAP\"][period]);\n        }\n    }, {\n        key: 'render',\n        value: function render() {\n            var _state = this.state,\n                ready = _state.ready,\n                minimized = _state.minimized,\n                period = _state.period,\n                sidebarCollapsed = _state.sidebarCollapsed,\n                tradingCentral = _state.tradingCentral;\n            var _props3 = this.props,\n                height = _props3.height,\n                className = _props3.className;\n\n            var classes = classSet_default()(ChartTradingView_defineProperty({\n                'chart-box': true,\n                'chart-trading-view': true,\n                'minimized': minimized\n            }, className, !!className));\n            var styles = {};\n\n            if (height) {\n                styles = {\n                    height: height + 'px',\n                    minHeight: height + 'px',\n                    maxHeight: height + 'px'\n                };\n            }\n\n            return react_default.a.createElement(\n                'div',\n                { className: classes, style: styles },\n                react_default.a.createElement(\n                    'div',\n                    { className: 'chart-trading-view-wrapper' },\n                    !ready && react_default.a.createElement(ChartLoading[\"default\"], null),\n                    response[\"default\"].mobile() && [react_default.a.createElement(\n                        'div',\n                        { className: 'minimize-chart hidden-minimized hidden-landscape',\n                            key: 'minimize-chart',\n                            onClick: this.minimize },\n                        react_default.a.createElement('i', { className: 'icon-double-arrow-down ' })\n                    ), react_default.a.createElement(Dropdown[\"default\"], { className: 'change-interval hidden-minimized hidden-landscape',\n                        as: 'div',\n                        name: 'chart-interval',\n                        key: 'chart-interval',\n                        selected: period,\n                        transformOptionText: function transformOptionText(item) {\n                            return item;\n                        },\n                        options: underscore[\"keys\"](TradingViewSettings[\"PERIOD_TO_RESOLUTION_MAP\"]),\n                        onChange: this.changeInterval }), react_default.a.createElement(\n                        'div',\n                        { className: 'restore-size-chart visible-minimized hidden-landscape',\n                            key: 'restore-size-chart',\n                            onClick: this.restoreSize },\n                        react_default.a.createElement(\n                            'div',\n                            null,\n                            react_default.a.createElement('i', { className: 'icon-double-arrow-up' })\n                        )\n                    )],\n                    react_default.a.createElement('div', { id: underscore[\"uniqueId\"]('chart-trading-view-'), ref: CHART_REF_KEY,\n                        className: 'chart-trading-view-container hidden-minimized' }),\n                    Object(TradingViewTradingCentral[\"isTradingCentralEnabled\"])() && tradingCentral && react_default.a.createElement(TradingCental, { className: sidebarCollapsed ? '' : 'with-sidebar',\n                        symbol: tradingCentral.symbol,\n                        term: tradingCentral.term })\n                )\n            );\n        }\n    }, {\n        key: 'initTradings',\n        value: function initTradings(instrument, chart) {\n            var _this7 = this;\n\n            if (settings_default.a.isChartTradingViewTradingLinesEnabled()) {\n                this.tvEventsListener.listenTo(instrument.getPositions(), 'add', function (position) {\n                    _this7.positions.push(Object(TradingViewLines[\"createPositionLine\"])(chart, instrument, position, _this7.theme));\n                });\n                this.tvEventsListener.listenTo(instrument.getOrders(), 'add', function (order) {\n                    _this7.orders.push(Object(TradingViewLines[\"createOrderLine\"])(chart, instrument, order, _this7.theme));\n                });\n\n                this.initPositions(instrument, chart);\n                this.initOrders(instrument, chart);\n            }\n        }\n    }, {\n        key: 'removeTradings',\n        value: function removeTradings(instrument) {\n            this.tvEventsListener.stopListening(instrument.getPositions(), 'add');\n            this.tvEventsListener.stopListening(instrument.getOrders(), 'add');\n\n            underscore[\"each\"](this.positions, function (position) {\n                return position.remove();\n            });\n            underscore[\"each\"](this.orders, function (order) {\n                return order.remove();\n            });\n        }\n    }, {\n        key: 'initOrders',\n        value: function initOrders(instrument, chart) {\n            var _this8 = this;\n\n            if (!this.orders) {\n                this.orders = [];\n            }\n\n            underscore[\"each\"](instrument.getOrders().models, function (order) {\n                _this8.orders.push(Object(TradingViewLines[\"createOrderLine\"])(chart, instrument, order, _this8.theme));\n            });\n        }\n    }, {\n        key: 'initPositions',\n        value: function initPositions(instrument, chart) {\n            var _this9 = this;\n\n            if (!this.positions) {\n                this.positions = [];\n            }\n\n            underscore[\"each\"](instrument.getPositions().models, function (position) {\n                _this9.positions.push(Object(TradingViewLines[\"createPositionLine\"])(chart, instrument, position, _this9.theme));\n            });\n        }\n    }, {\n        key: 'onTradingCentralStatusChanged',\n        value: function onTradingCentralStatusChanged() {\n            var shouldBeEnabled = user_model_default.a.getUserCommonData().isTradingCentralEnabled();\n\n            if (!this.tvTradingCentral.enabled && shouldBeEnabled) {\n                this.initTradingCentral();\n            } else if (this.tvTradingCentral.enabled && !shouldBeEnabled) {\n                this.removeTradingCentral();\n            }\n\n            Object(TradingViewSettings[\"updateMultichartsTradingCentalWarning\"])(this.tvWidget);\n        }\n    }, {\n        key: 'initTradingCentral',\n        value: function initTradingCentral(instrument, resolution) {\n            if (!instrument || !resolution) {\n                resolution = this.tvWidget.symbolInterval().interval;\n                instrument = this.tvDatafeed.getSubscription(this.tvWidget.symbolInterval().symbol, resolution).getInstrument();\n            }\n\n            this.tvTradingCentral.init(instrument, resolution);\n\n            this.setState({\n                tradingCentral: this.tvTradingCentral.options\n            });\n        }\n    }, {\n        key: 'removeTradingCentral',\n        value: function removeTradingCentral() {\n            this.tvTradingCentral.destroy();\n\n            this.setState({\n                tradingCentral: undefined\n            });\n        }\n    }], [{\n        key: 'getSelectedInstrumentSymbol',\n        value: function getSelectedInstrumentSymbol() {\n            return Object(ui_selectors[\"getUiSelectedInstrumentCategorySymbol\"])(store.getState());\n        }\n    }, {\n        key: 'getDeepLinkInterval',\n        value: function getDeepLinkInterval() {\n            var deepLinkPath = Object(deep_link_selectors[\"getDeepLinkPath\"])(store.getState(), true);\n\n            if (deepLinkPath === deep_link_consts[\"PATH\"].DETAILS) {\n                var deepLinkChart = Object(deep_link_selectors[\"getDeepLinkChart\"])(store.getState());\n\n                if (deepLinkChart) {\n                    return TradingViewSettings[\"PERIOD_TO_RESOLUTION_MAP\"][deepLinkChart.toLowerCase()];\n                }\n            }\n        }\n    }, {\n        key: 'prepareLocalSavedChart',\n        value: function prepareLocalSavedChart(localSavedChart) {\n            var parsedLocalSavedChart = JSON.parse(localSavedChart);\n\n            if (parsedLocalSavedChart.name) {\n                return {\n                    data: {\n                        data: parsedLocalSavedChart\n                    }\n                };\n            } else {\n                return {\n                    data: {\n                        data: {\n                            name: '',\n                            content: JSON.stringify({\n                                content: localSavedChart\n                            })\n                        }\n                    }\n                };\n            }\n        }\n    }, {\n        key: 'trade',\n        value: function trade(symbol) {\n            var properties = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n            if (properties.direction === common_types[\"BUY\"] && Object(instruments_utils[\"isBuyTradable\"])(symbol)) {\n                core_default.a.trigger('ui:new-position', _extends({ symbolOrId: symbol }, properties));\n            } else if (properties.direction === common_types[\"SELL\"] && Object(instruments_utils[\"isSellTradable\"])(symbol)) {\n                core_default.a.trigger('ui:new-position', _extends({ symbolOrId: symbol }, properties));\n            }\n        }\n    }]);\n\n    return ChartTradingView;\n}(react_default.a.Component);\n\nChartTradingView_ChartTradingView.defaultProps = {\n    autosize: true,\n    disabled_features: TradingViewSettings[\"FEATURES\"].DISABLED,\n    enabled_features: TradingViewSettings[\"FEATURES\"].ENABLED,\n    interval: '5',\n    library_path: 'tv/',\n    locale: localization[\"getCurrentLanguage\"]() || 'en',\n    charts_storage_url: server_request_default.a.tradingViewService(),\n    client_id: Object(sha1[\"default\"])(settings_default.a.getBrandName()),\n    user_id: Object(sha1[\"default\"])(user_model_default.a.getCustomerId()),\n    charts_storage_api_version: '1.1',\n    auto_save_delay: 1,\n    link_to_tradingview: false,\n    timezone: Object(TradingViewTimezones[\"getAvailableTimezone\"])(user_model_default.a.getUserCommonData().getUserTimezoneObject()),\n    custom_css_url: '' + window.location.origin + window.location.pathname + '/' + trading_view_default.a,\n    time_frames: [{ text: '1d', resolution: '1', description: '1 Day' }, { text: '5d', resolution: '5', description: '5 Days' }, { text: '1m', resolution: '30', description: '1 Month' }, { text: '3m', resolution: '60', description: '3 Months' }, { text: '6m', resolution: '120', description: '6 Months' }, { text: '1y', resolution: 'D', description: '1 Year' }, { text: '5y', resolution: 'W', description: '5 Years' }]\n};\n\n\n/* harmony default export */ var components_ChartTradingView = __webpack_exports__[\"default\"] = (ChartTradingView_ChartTradingView);\n\n//# sourceURL=webpack:///./src/js/modules/chart/trading-view/components/ChartTradingView.js_+_2_modules?");

/***/ })

}]);