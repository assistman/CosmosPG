(window["webpackJsonp"] = window["webpackJsonp"] || []).push([["credit-card-verify"],{

/***/ "./src/js/modules/verify/creditCardVerify/index.js":
/*!*********************************************************!*\
  !*** ./src/js/modules/verify/creditCardVerify/index.js ***!
  \*********************************************************/
/*! no static exports found */
/*! ModuleConcatenation bailout: Module is not an ECMAScript module */
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_RESULT__ = (function (require, exports, module) {\n    var VerifyPopupView = __webpack_require__(/*! ./verify.popup.view */ \"./src/js/modules/verify/creditCardVerify/verify.popup.view.js\");\n    var template = __webpack_require__(/*! ./../templates/verify-popup.html */ \"./src/js/modules/verify/templates/verify-popup.html\");\n\n    function initVerifyPopupView(options) {\n        return new VerifyPopupView(options, template);\n    }\n\n    module.exports = initVerifyPopupView;\n}).call(exports, __webpack_require__, exports, module),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n//# sourceURL=webpack:///./src/js/modules/verify/creditCardVerify/index.js?");

/***/ }),

/***/ "./src/js/modules/verify/creditCardVerify/verify.popup.view.js":
/*!*********************************************************************!*\
  !*** ./src/js/modules/verify/creditCardVerify/verify.popup.view.js ***!
  \*********************************************************************/
/*! no static exports found */
/*! ModuleConcatenation bailout: Module is not an ECMAScript module */
/***/ (function(module, exports, __webpack_require__) {

eval("/* WEBPACK VAR INJECTION */(function(_, $) {var __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_RESULT__ = (function (require, exports, module) {\n    var VerifyPopupView = __webpack_require__(/*! ./../verify.popup.view */ \"./src/js/modules/verify/verify.popup.view.js\");\n    var core = __webpack_require__(/*! core */ \"./src/js/core.js\");\n    var config = __webpack_require__(/*! config */ \"./src/js/config.js\");\n    var _ = __webpack_require__(/*! underscore */ \"./node_modules/underscore/underscore.js\");\n\n    var types = __webpack_require__(/*! modules/user/user.documents.types */ \"./src/js/modules/user/user.documents.types.js\");\n\n    var _require = __webpack_require__(/*! common.types */ \"./src/js/common.types.js\"),\n        REJECTED = _require.REJECTED,\n        PENDING = _require.PENDING,\n        APPROVED = _require.APPROVED,\n        IN_PROCESS = _require.IN_PROCESS;\n\n    var Forex4GroupVerifyPopupView = VerifyPopupView.extend({\n\n        events: function events() {\n            return _.extend({}, _.result(VerifyPopupView.prototype, 'events'), {\n                'change .upload-cc': 'previewCCFile',\n                'change .cc-verify-select': 'changeCC'\n            });\n        },\n\n        render: function render(options) {\n            VerifyPopupView.prototype.render.call(this);\n\n            if (this.ccList.length > 0) {\n                this.initCCOptions();\n            }\n        },\n\n        initCCOptions: function initCCOptions() {\n            var _this = this;\n\n            this.ccOptions = {};\n\n            _.each(this.ccList, function (card) {\n                _this.ccOptions[card.id] = {\n                    frontStatus: card.frontStatus,\n                    backStatus: card.backStatus,\n                    status: card.status\n                };\n            });\n\n            this.updateCCStatuses();\n        },\n\n        getBlockCCRenderTemplateData: function getBlockCCRenderTemplateData() {\n            return _.extend({}, VerifyPopupView.prototype.getBlockCCRenderTemplateData.call(this), {\n                shouldUploadCCDocs: true,\n                ccOptions: this.ccOptions\n            });\n        },\n\n        getBlockCCMobileRenderTemplateData: function getBlockCCMobileRenderTemplateData() {\n            return _.extend({}, VerifyPopupView.prototype.getBlockCCMobileRenderTemplateData.call(this), {\n                shouldUploadCCDocs: true,\n                ccOptions: this.ccOptions\n            });\n        },\n\n        updateCCStatuses: function updateCCStatuses() {\n            var _this2 = this;\n\n            var ccid = this.getCCId();\n            var $ccUploadStatus = this.$('.cc-upload-status');\n            var card = this.ccOptions[ccid];\n            var hide = function hide(ident) {\n                return _this2.$(ident).addClass('hidden');\n            };\n            var show = function show(ident) {\n                return _this2.$(ident).removeClass('hidden');\n            };\n\n            hide('.upload-cc-front .doc-status');\n            hide('.upload-cc-back .doc-status');\n            hide('.mobile-upload-cc-front .mobile-upload-status');\n            hide('.mobile-upload-cc-back .mobile-upload-status');\n\n            this.$('.cc-verification .fileUpload span').html(__('verification_center.choose_file'));\n\n            var frontPending = card.frontStatus === PENDING || card.frontStatus === IN_PROCESS;\n            var backPending = card.backStatus === PENDING || card.backStatus === IN_PROCESS;\n            var isFrontDocApproved = card.frontStatus === APPROVED;\n            var isBackDocApproved = card.backStatus === APPROVED;\n\n            var cardStatus = card.status;\n\n            if (frontPending) {\n                show('.upload-cc-front .doc-status');\n                show('.mobile-upload-cc-front .mobile-upload-status');\n                this.$('.upload-cc-front .fileUpload span').html(__('verification_center.update_file'));\n            }\n\n            if (backPending) {\n                show('.upload-cc-back .doc-status');\n                show('.mobile-upload-cc-back .mobile-upload-status');\n                this.$('.upload-cc-back .fileUpload span').html(__('verification_center.update_file'));\n            }\n\n            var $ccWrapper = this.$('.cc-verification-mobile');\n            var mobileUploadStatusClass = '.mobile-upload-status-card';\n            var update = function update($wrapper, className, addClass, text) {\n                return $wrapper.find(className).removeClass('hidden').addClass(addClass).find('.text').html(text);\n            };\n\n            $ccUploadStatus.find('.cc-upload-status div').addClass('hidden');\n\n            if (cardStatus === PENDING) {\n                cardStatus = frontPending || backPending ? cardStatus : '';\n\n                if (!cardStatus) {\n                    cardStatus = isFrontDocApproved && isBackDocApproved ? APPROVED : '';\n                }\n            }\n\n            switch (cardStatus) {\n                case PENDING:\n                case IN_PROCESS:\n                    show('.cc-upload-status .in-review');\n                    update($ccWrapper, mobileUploadStatusClass, 'in-review', __('verification_center.status.review'));\n                    core.trigger('sm', 'c_verify');\n                    break;\n                case APPROVED:\n                    show('.cc-upload-status .approved');\n                    update($ccWrapper, mobileUploadStatusClass, 'approved', __('verification_center.status.approved'));\n                    core.trigger('sm', 'c_verify');\n                    break;\n                case REJECTED:\n                    show('.cc-upload-status .rejected');\n                    update($ccWrapper, mobileUploadStatusClass, 'rejected', __('verification_center.status.rejected'));\n                    break;\n                default:\n                    $ccUploadStatus.find('.in-review').addClass('hidden');\n                    $ccUploadStatus.find('.approved').addClass('hidden');\n                    $ccUploadStatus.find('.rejected').addClass('hidden');\n            }\n        },\n\n        changeCC: function changeCC(e) {\n            this.ccid = e.currentTarget.value;\n            this.updateCCStatuses();\n        },\n\n        getCCId: function getCCId() {\n            if (!this.ccid) {\n                var $select = this.$el.find('.cc-verify-select select')[0];\n\n                this.ccid = $select.value;\n            }\n\n            return this.ccid;\n        },\n\n        previewCCFile: function previewCCFile(e) {\n            var preview = document.querySelector('#' + $(e.currentTarget).attr('data-id'));\n            var file = e.currentTarget.files[0];\n\n            if (file) {\n                if (config.uploadDocumentsFileExt.test(file.name) && file.size < config.uploadDocumentsFileMaxSize) {\n                    this.$el.find('.cc-error').addClass('hidden');\n                    this.uploadCCFile(e.currentTarget.form);\n                } else {\n                    if (e.currentTarget.getAttribute('data-id').indexOf('cc-') > -1) {\n                        this.$el.find('.cc-error').removeClass('hidden');\n                    }\n                }\n            }\n        },\n\n        uploadCCFile: function uploadCCFile(form) {\n            var _this3 = this;\n\n            var fileVal = $(form).find('.upload').val();\n\n            if (fileVal) {\n                var docType = $(form).find('[name=docType]').val();\n                var docTypeIntVal = parseInt(docType, 10);\n                var formData = new FormData(form);\n                var ccid = this.getCCId();\n\n                formData.append('docId', ccid);\n\n                if (docTypeIntVal === types.CREDIT_CARD_FRONT) {\n                    formData.append('comment', 'Front');\n                }\n\n                if (docTypeIntVal === types.CREDIT_CARD_BACK) {\n                    formData.append('comment', 'Back');\n                }\n\n                this.model.uploadDocument(docType, formData).then(function (res) {\n                    if (docTypeIntVal === types.CREDIT_CARD_FRONT) {\n                        _this3.ccOptions[ccid].frontStatus = PENDING;\n                    }\n\n                    if (docTypeIntVal === types.CREDIT_CARD_BACK) {\n                        _this3.ccOptions[ccid].backStatus = PENDING;\n                    }\n\n                    _this3.updateCCStatuses();\n                });\n            }\n        },\n\n        // disable approveCC methods\n        approveCC: function approveCC() {\n            return false;\n        },\n\n        approveCC_mobile: function approveCC_mobile() {\n            return false;\n        }\n\n    });\n\n    module.exports = Forex4GroupVerifyPopupView;\n}).call(exports, __webpack_require__, exports, module),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! underscore */ \"./node_modules/underscore/underscore.js\"), __webpack_require__(/*! jquery */ \"./src/vendors/jbone.js\")))\n\n//# sourceURL=webpack:///./src/js/modules/verify/creditCardVerify/verify.popup.view.js?");

/***/ })

}]);