(window["webpackJsonp"] = window["webpackJsonp"] || []).push([[11],{

/***/ "./src/js/modules/chart/multi-charts/components/MultiChartsTradingView.jsx":
/*!*********************************************************************************!*\
  !*** ./src/js/modules/chart/multi-charts/components/MultiChartsTradingView.jsx ***!
  \*********************************************************************************/
/*! exports provided: default */
/*! ModuleConcatenation bailout: Module is referenced from these modules with unsupported syntax: ./src/js/modules/chart/multi-charts/components/MultiChartsComponent.jsx (referenced with import()) */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var underscore__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! underscore */ \"./node_modules/underscore/underscore.js\");\n/* harmony import */ var underscore__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(underscore__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var common_localization__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! common/localization */ \"./src/js/common/localization.js\");\n/* harmony import */ var common_localization__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(common_localization__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var Backbone__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! Backbone */ \"./node_modules/backbone/backbone.js\");\n/* harmony import */ var Backbone__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(Backbone__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var react_autobind__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! react-autobind */ \"./node_modules/react-autobind/index.js\");\n/* harmony import */ var react_autobind__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(react_autobind__WEBPACK_IMPORTED_MODULE_4__);\n/* harmony import */ var chart_trading_view_BackboneEventsListener__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! chart/trading-view/BackboneEventsListener */ \"./src/js/modules/chart/trading-view/BackboneEventsListener.js\");\n/* harmony import */ var react_classset__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! react-classset */ \"./node_modules/react-classset/classSet.js\");\n/* harmony import */ var react_classset__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(react_classset__WEBPACK_IMPORTED_MODULE_6__);\n/* harmony import */ var device__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! device */ \"./src/vendors/device.js\");\n/* harmony import */ var utils_response__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! utils/response */ \"./src/js/utils/response.js\");\n/* harmony import */ var store_settings__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! store/settings */ \"./src/js/store/settings.js\");\n/* harmony import */ var store_settings__WEBPACK_IMPORTED_MODULE_9___default = /*#__PURE__*/__webpack_require__.n(store_settings__WEBPACK_IMPORTED_MODULE_9__);\n/* harmony import */ var common_sha1__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! common/sha1 */ \"./src/js/common/sha1.js\");\n/* harmony import */ var themes_themes_dispatcher__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! themes/themes.dispatcher */ \"./src/js/modules/themes/themes.dispatcher.js\");\n/* harmony import */ var themes_themes_dispatcher__WEBPACK_IMPORTED_MODULE_11___default = /*#__PURE__*/__webpack_require__.n(themes_themes_dispatcher__WEBPACK_IMPORTED_MODULE_11__);\n/* harmony import */ var chart_trading_view_TradingViewDatafeed__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! chart/trading-view/TradingViewDatafeed */ \"./src/js/modules/chart/trading-view/TradingViewDatafeed.js\");\n/* harmony import */ var user_user_model__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! user/user.model */ \"./src/js/modules/user/user.model.js\");\n/* harmony import */ var user_user_model__WEBPACK_IMPORTED_MODULE_13___default = /*#__PURE__*/__webpack_require__.n(user_user_model__WEBPACK_IMPORTED_MODULE_13__);\n/* harmony import */ var chart_trading_view_TradingViewSettings__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! chart/trading-view/TradingViewSettings */ \"./src/js/modules/chart/trading-view/TradingViewSettings.js\");\n/* harmony import */ var chart_trading_view_TradingViewTimezones__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! chart/trading-view/TradingViewTimezones */ \"./src/js/modules/chart/trading-view/TradingViewTimezones.js\");\n/* harmony import */ var store_ui_selectors__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! store/ui.selectors */ \"./src/js/store/ui.selectors.js\");\n/* harmony import */ var deep_links_deep_link_selectors__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! deep-links/deep.link.selectors */ \"./src/js/modules/deep-links/deep.link.selectors.js\");\n/* harmony import */ var TradingView__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! TradingView */ \"./src/vendors/charting_library.min.js\");\n/* harmony import */ var TradingView__WEBPACK_IMPORTED_MODULE_18___default = /*#__PURE__*/__webpack_require__.n(TradingView__WEBPACK_IMPORTED_MODULE_18__);\n/* harmony import */ var store_instruments__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! store/instruments */ \"./src/js/store/instruments.js\");\n/* harmony import */ var store_instruments__WEBPACK_IMPORTED_MODULE_19___default = /*#__PURE__*/__webpack_require__.n(store_instruments__WEBPACK_IMPORTED_MODULE_19__);\n/* harmony import */ var server__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! server */ \"./src/js/modules/server/server.request.js\");\n/* harmony import */ var server__WEBPACK_IMPORTED_MODULE_20___default = /*#__PURE__*/__webpack_require__.n(server__WEBPACK_IMPORTED_MODULE_20__);\n/* harmony import */ var instruments_instruments_utils__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! instruments/instruments.utils */ \"./src/js/modules/instruments/instruments.utils.js\");\n/* harmony import */ var _css_trading_view_index_scss__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! ../../../../../css/trading-view/index.scss */ \"./src/css/trading-view/index.scss\");\n/* harmony import */ var _css_trading_view_index_scss__WEBPACK_IMPORTED_MODULE_22___default = /*#__PURE__*/__webpack_require__.n(_css_trading_view_index_scss__WEBPACK_IMPORTED_MODULE_22__);\n/* harmony import */ var modules_chart_trading_view_ChartTradingView_scss__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! modules/chart/trading-view/ChartTradingView.scss */ \"./src/js/modules/chart/trading-view/ChartTradingView.scss\");\n/* harmony import */ var modules_chart_trading_view_ChartTradingView_scss__WEBPACK_IMPORTED_MODULE_23___default = /*#__PURE__*/__webpack_require__.n(modules_chart_trading_view_ChartTradingView_scss__WEBPACK_IMPORTED_MODULE_23__);\n/* harmony import */ var deep_links_deep_link_consts__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(/*! deep-links/deep.link.consts */ \"./src/js/modules/deep-links/deep.link.consts.js\");\n/* harmony import */ var chart_trading_view_TradingViewLines__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(/*! chart/trading-view/TradingViewLines */ \"./src/js/modules/chart/trading-view/TradingViewLines.js\");\n/* harmony import */ var common_types__WEBPACK_IMPORTED_MODULE_26__ = __webpack_require__(/*! common.types */ \"./src/js/common.types.js\");\n/* harmony import */ var core__WEBPACK_IMPORTED_MODULE_27__ = __webpack_require__(/*! core */ \"./src/js/core.js\");\n/* harmony import */ var core__WEBPACK_IMPORTED_MODULE_27___default = /*#__PURE__*/__webpack_require__.n(core__WEBPACK_IMPORTED_MODULE_27__);\n/* harmony import */ var new_order_types__WEBPACK_IMPORTED_MODULE_28__ = __webpack_require__(/*! new-order/types */ \"./src/js/modules/new-order/types.js\");\n/* harmony import */ var new_order_types__WEBPACK_IMPORTED_MODULE_28___default = /*#__PURE__*/__webpack_require__.n(new_order_types__WEBPACK_IMPORTED_MODULE_28__);\n/* harmony import */ var chart_components_ChartLoading__WEBPACK_IMPORTED_MODULE_29__ = __webpack_require__(/*! chart/components/ChartLoading */ \"./src/js/modules/chart/components/ChartLoading.jsx\");\n/* harmony import */ var store_ui_actions__WEBPACK_IMPORTED_MODULE_30__ = __webpack_require__(/*! store/ui.actions */ \"./src/js/store/ui.actions.js\");\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nvar CHART_REF_KEY = 'tvWidget';\n\nvar MOBILE_LANDSCAPE = 'mobile-landscape';\nvar MOBILE_PORTRAIT = 'mobile-portrait';\n\nvar MIN_VIEWPORT_HEIGHT = 500;\nvar CHART_NAME = 'multicharts';\nvar STORAGE_KEY = 'tv_mc_local';\n\nvar CHART_CLASSNAME = 'multi-chart';\n\nvar DEPRECATED_SOURCES = [];\n\nTradingView__WEBPACK_IMPORTED_MODULE_18__[\"widget\"].prototype.documentElement = function () {\n    return this._innerWindow().document.documentElement;\n};\n\nTradingView__WEBPACK_IMPORTED_MODULE_18__[\"widget\"].prototype.forEachChart = function (func) {\n    for (var index = 0, len = this._chartsCount; index < len; index++) {\n        func(this._innerAPI()._getChartWidgetApi(this._innerAPI()._chartWidgetCollection.getAll()[index]), index);\n    }\n};\n\nvar MultiChartsTradingView = function (_React$Component) {\n    _inherits(MultiChartsTradingView, _React$Component);\n\n    function MultiChartsTradingView(props) {\n        _classCallCheck(this, MultiChartsTradingView);\n\n        var _this = _possibleConstructorReturn(this, (MultiChartsTradingView.__proto__ || Object.getPrototypeOf(MultiChartsTradingView)).call(this, props));\n\n        react_autobind__WEBPACK_IMPORTED_MODULE_4___default()(_this);\n\n        _this.save = underscore__WEBPACK_IMPORTED_MODULE_1__[\"debounce\"](_this.save, 1000);\n\n        _this.state = {\n            ready: false,\n            minimized: device__WEBPACK_IMPORTED_MODULE_7__[\"default\"].mobile() && device__WEBPACK_IMPORTED_MODULE_7__[\"default\"].portrait() && window.innerHeight < MIN_VIEWPORT_HEIGHT,\n            sidebarCollapsed: false\n        };\n        return _this;\n    }\n\n    _createClass(MultiChartsTradingView, [{\n        key: 'componentDidMount',\n        value: function componentDidMount() {\n            this._mounted = true;\n\n            var _props = this.props,\n                clientId = _props.client_id,\n                userId = _props.user_id;\n\n\n            server__WEBPACK_IMPORTED_MODULE_20___default.a.getTradingViewSavedCharts(clientId, userId).then(this.onSavedChartsLoaded).catch(this.onSavedChartsLoaded);\n        }\n    }, {\n        key: 'onSavedChartsLoaded',\n        value: function onSavedChartsLoaded(_ref) {\n            var chartsResp = _ref.data,\n                status = _ref.status;\n\n            this.serverError = status !== 200;\n\n            if (this.serverError) {\n                var localSavedChart = localStorage.getItem(STORAGE_KEY);\n\n                if (localSavedChart) {\n                    this.onSavedChartLoaded(MultiChartsTradingView.prepareLocalSavedChart(localSavedChart));\n                } else {\n                    this.initTradingViewWidget();\n                }\n\n                return;\n            }\n\n            if (!chartsResp.data || chartsResp.data.length === 0) {\n                this.initTradingViewWidget();\n\n                return;\n            }\n\n            var savedCharts = underscore__WEBPACK_IMPORTED_MODULE_1__[\"chain\"](chartsResp.data).filter(function (_ref2) {\n                var name = _ref2.name;\n                return name.indexOf(CHART_NAME) === 0;\n            }).sortBy('timestamp').value();\n\n            if (underscore__WEBPACK_IMPORTED_MODULE_1__[\"isEmpty\"](savedCharts)) {\n                this.initTradingViewWidget();\n\n                return;\n            }\n\n            var _props2 = this.props,\n                clientId = _props2.client_id,\n                userId = _props2.user_id;\n\n\n            underscore__WEBPACK_IMPORTED_MODULE_1__[\"each\"](underscore__WEBPACK_IMPORTED_MODULE_1__[\"initial\"](savedCharts), function (chart) {\n                return server__WEBPACK_IMPORTED_MODULE_20___default.a.deleteTradingViewSavedChart(clientId, userId, chart.id);\n            });\n\n            server__WEBPACK_IMPORTED_MODULE_20___default.a.getTradingViewSavedChart(clientId, userId, underscore__WEBPACK_IMPORTED_MODULE_1__[\"last\"](savedCharts).id).then(this.onSavedChartLoaded);\n        }\n    }, {\n        key: 'onSavedChartLoaded',\n        value: function onSavedChartLoaded(_ref3) {\n            var _ref3$data$data = _ref3.data.data,\n                id = _ref3$data$data.id,\n                name = _ref3$data$data.name,\n                content = _ref3$data$data.content;\n\n            try {\n                var chartContent = JSON.parse(content);\n                var savedData = JSON.parse(chartContent.content);\n\n                for (var charts = savedData.charts, chartIndex = charts.length - 1; chartIndex >= 0; chartIndex--) {\n                    var chart = charts[chartIndex];\n\n                    delete chart.timezone;\n\n                    for (var panes = chart.panes, paneIndex = panes.length - 1; paneIndex >= 0; paneIndex--) {\n                        var pane = panes[paneIndex];\n\n                        for (var sources = pane.sources, sourceIndex = sources.length - 1; sourceIndex >= 0; sourceIndex--) {\n                            var source = sources[sourceIndex];\n\n                            if (DEPRECATED_SOURCES.indexOf(source.state.description) >= 0) {\n                                sources.splice(sourceIndex, 1);\n                            }\n                        }\n\n                        if (!pane.sources.length) {\n                            panes.splice(paneIndex, 1);\n                        }\n                    }\n                }\n\n                this.initTradingViewWidget(id, name.split('_')[1], savedData);\n            } catch (e) {\n                this.initTradingViewWidget();\n            }\n        }\n    }, {\n        key: 'initTradingViewWidget',\n        value: function initTradingViewWidget(chartId, savedTheme, savedData, style) {\n            var _this2 = this;\n\n            if (!this._mounted) {\n                return;\n            }\n\n            this.chartId = chartId;\n            this.theme = themes_themes_dispatcher__WEBPACK_IMPORTED_MODULE_11___default.a.isLightTheme() ? chart_trading_view_TradingViewSettings__WEBPACK_IMPORTED_MODULE_14__[\"THEMES\"].LIGHT : chart_trading_view_TradingViewSettings__WEBPACK_IMPORTED_MODULE_14__[\"THEMES\"].DARK;\n            this.themeChanged = savedTheme !== this.theme;\n\n            this.tvDatafeed = new chart_trading_view_TradingViewDatafeed__WEBPACK_IMPORTED_MODULE_12__[\"default\"]();\n            this.tvDatafeed.on(chart_trading_view_TradingViewDatafeed__WEBPACK_IMPORTED_MODULE_12__[\"EVENTS\"].LOAD, this.onDataLoaded);\n\n            this.tvWidget = new TradingView__WEBPACK_IMPORTED_MODULE_18__[\"widget\"](_extends({}, this.props, {\n                symbol: MultiChartsTradingView.getSelectedInstrumentSymbol(),\n                container_id: this.refs[CHART_REF_KEY].id,\n                datafeed: this.tvDatafeed,\n                theme: this.theme,\n                overrides: _extends({}, chart_trading_view_TradingViewSettings__WEBPACK_IMPORTED_MODULE_14__[\"OVERRIDES\"][this.theme], style && { 'mainSeriesProperties.style': style }),\n                studies_overrides: chart_trading_view_TradingViewSettings__WEBPACK_IMPORTED_MODULE_14__[\"STUDIES_OVERRIDES\"][this.theme],\n                loading_screen: {\n                    backgroundColor: chart_trading_view_TradingViewSettings__WEBPACK_IMPORTED_MODULE_14__[\"LOADING_BACKGROUND\"][this.theme]\n                }\n            }, utils_response__WEBPACK_IMPORTED_MODULE_8__[\"default\"].mobile() && {\n                disabled_features: [].concat(_toConsumableArray(this.props.disabled_features), _toConsumableArray(chart_trading_view_TradingViewSettings__WEBPACK_IMPORTED_MODULE_14__[\"FEATURES\"].MOBILE.DISABLED))\n            }, {\n                enabled_features: [].concat(_toConsumableArray(this.props.enabled_features), ['header_layouttoggle', 'support_multicharts', 'header_symbol_search'])\n            }, savedData && {\n                saved_data: savedData\n            }, !savedData && {\n                interval: MultiChartsTradingView.getDeepLinkInterval() || this.props.interval\n            }));\n\n            this.tvEventsListener = chart_trading_view_BackboneEventsListener__WEBPACK_IMPORTED_MODULE_5__[\"default\"].create({\n                onThemeChanged: function onThemeChanged(name) {\n                    _this2.theme = name;\n                    _this2.changeTheme(name);\n\n                    _this2.tvWidget.forEachChart(function (chart) {\n                        underscore__WEBPACK_IMPORTED_MODULE_1__[\"each\"](chart._positions, function (position) {\n                            return position.changeTheme(name);\n                        });\n                        underscore__WEBPACK_IMPORTED_MODULE_1__[\"each\"](chart._orders, function (order) {\n                            return order.changeTheme(name);\n                        });\n                    });\n                },\n                onInstrumentRowSelected: function onInstrumentRowSelected(symbol, click) {\n                    if (click) {\n                        if (_this2.state.ready) {\n                            if (symbol !== _this2.tvWidget.activeChart().symbol()) {\n                                _this2.setSymbol(symbol);\n                            }\n                        } else {\n                            _this2.tempSymbol = symbol;\n                        }\n                    }\n                }\n            });\n\n            this.tvWidget.onChartReady(this.onChartReady);\n        }\n    }, {\n        key: 'onDataLoaded',\n        value: function onDataLoaded(id, symbol, resolution) {\n            var _this3 = this;\n\n            this.tvWidget.forEachChart(function (chart, index) {\n                if (chart.symbol() === symbol && chart.resolution() === resolution) {\n                    MultiChartsTradingView.initTradings(_this3.tvDatafeed.getSubscription(symbol, resolution).getInstrument(), chart, _this3.theme);\n                }\n            });\n        }\n    }, {\n        key: 'onChartReady',\n        value: function onChartReady() {\n            var _this4 = this;\n\n            var tvWidget = this.tvWidget;\n            var tvDocument = tvWidget.documentElement();\n\n            Object(chart_trading_view_TradingViewSettings__WEBPACK_IMPORTED_MODULE_14__[\"setChartClassName\"])(tvWidget, CHART_CLASSNAME);\n            Object(chart_trading_view_TradingViewSettings__WEBPACK_IMPORTED_MODULE_14__[\"setMultichartsLayoutClassName\"])(tvWidget);\n\n            if (this.themeChanged) {\n                this.changeTheme(this.theme);\n            }\n\n            Object(chart_trading_view_TradingViewSettings__WEBPACK_IMPORTED_MODULE_14__[\"fixUI\"])(tvDocument);\n\n            tvWidget.createButton({ align: 'right' }).attr('title', __('actions.close')).on('click', function (e) {\n                var fragment = Backbone__WEBPACK_IMPORTED_MODULE_3___default.a.history.fragment;\n\n                store.dispatch(Object(store_ui_actions__WEBPACK_IMPORTED_MODULE_30__[\"setMultiChartsEnabled\"])(false));\n                core__WEBPACK_IMPORTED_MODULE_27___default.a.navigate(fragment.substr(common_types__WEBPACK_IMPORTED_MODULE_26__[\"MULTI_CHARTS_PATH\"].length), { trigger: false });\n            }).append('<div class=\"close-mc\"></div>');\n\n            if (utils_response__WEBPACK_IMPORTED_MODULE_8__[\"default\"].mobile()) {\n                Object(chart_trading_view_TradingViewSettings__WEBPACK_IMPORTED_MODULE_14__[\"collapseTooltip\"])(tvDocument);\n                this.initOrientationHandler();\n            }\n\n            if (this.chartId) {\n                var _getChartWidgetCollec = this.getChartWidgetCollection().metaInfo,\n                    uid = _getChartWidgetCollec.uid,\n                    id = _getChartWidgetCollec.id,\n                    name = _getChartWidgetCollec.name;\n\n\n                id.setValue(this.chartId);\n                uid.setValue(this.chartId);\n                name.setValue(CHART_NAME);\n            } else {\n                tvWidget.setLayout('4');\n            }\n\n            tvWidget._chartsCount = this.tvWidget.chartsCount();\n\n            tvWidget.onContextMenu(this.onContextMenu);\n\n            this.setState({ ready: true });\n\n            if (Object(deep_links_deep_link_selectors__WEBPACK_IMPORTED_MODULE_17__[\"getDeepLinkPath\"])(store.getState(), true) === deep_links_deep_link_consts__WEBPACK_IMPORTED_MODULE_24__[\"PATH\"].INDICATORS) {\n                tvDocument.querySelector('#header-toolbar-indicators').click();\n            }\n\n            tvWidget.subscribe('onAutoSaveNeeded', function () {\n                _this4.save();\n            });\n\n            tvWidget.subscribe('toggle_sidebar', function (sidebarCollapsed) {\n                _this4.setState({ sidebarCollapsed: sidebarCollapsed });\n            });\n\n            tvWidget.subscribe('layout_about_to_be_changed', function () {\n                _this4.tvWidget.forEachChart(function (chart) {\n                    MultiChartsTradingView.removeTradings(_this4.getInstrument(chart.symbol()), chart);\n                });\n            });\n\n            tvWidget.subscribe('layout_changed', function () {\n                _this4.tvWidget._chartsCount = _this4.tvWidget.chartsCount();\n\n                Object(chart_trading_view_TradingViewSettings__WEBPACK_IMPORTED_MODULE_14__[\"setMultichartsLayoutClassName\"])(_this4.tvWidget);\n\n                _this4.tvWidget.forEachChart(function (chart) {\n                    chart.dataReady(function () {\n                        return MultiChartsTradingView.initTradings(_this4.getInstrument(), chart, _this4.theme);\n                    });\n                });\n            });\n\n            if (this.tempSymbol) {\n                this.setSymbol(this.tempSymbol);\n                delete this.tempSymbol;\n            }\n\n            tvWidget.forEachChart(function (chart, index) {\n                chart.onSymbolChanged().subscribe(null, function () {\n                    MultiChartsTradingView.removeTradings(_this4.getInstrument(), chart);\n                    _this4.save();\n                });\n\n                chart.onIntervalChanged().subscribe(null, function () {\n                    _this4.save();\n                });\n            });\n        }\n    }, {\n        key: 'getChartWidgetCollection',\n        value: function getChartWidgetCollection() {\n            return this.tvWidget._innerAPI()._chartWidgetCollection;\n        }\n    }, {\n        key: 'getInstrument',\n        value: function getInstrument() {\n            var symbol = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.tvWidget.symbolInterval().symbol;\n\n            return store_instruments__WEBPACK_IMPORTED_MODULE_19___default.a.getInstrumentBySymbol(symbol);\n        }\n    }, {\n        key: 'onContextMenu',\n        value: function onContextMenu(timestamp, price) {\n            if (!price) {\n                return;\n            }\n\n            var _tvWidget$symbolInter = this.tvWidget.symbolInterval(),\n                symbol = _tvWidget$symbolInter.symbol,\n                resolution = _tvWidget$symbolInter.interval;\n\n            var subscription = this.tvDatafeed.getSubscription(symbol, resolution);\n\n            if (subscription) {\n\n                var lastPrice = subscription.getLastCandle().close;\n                var instrument = subscription.getInstrument();\n                var displayName = instrument.getDisplayName();\n                var precision = instrument.getPrecision();\n                var selectedPrice = price.toFixed(precision);\n\n                var menu = [];\n\n                var buyTradable = Object(instruments_instruments_utils__WEBPACK_IMPORTED_MODULE_21__[\"isBuyTradable\"])(symbol);\n                var sellTradable = Object(instruments_instruments_utils__WEBPACK_IMPORTED_MODULE_21__[\"isSellTradable\"])(symbol);\n\n                if (+selectedPrice < lastPrice) {\n                    if (buyTradable) {\n                        menu.push({\n                            position: 'top',\n                            text: __('actions.buy') + ' ' + displayName + ' ' + __('type.LIMIT') + ' ' + selectedPrice,\n                            click: function click() {\n                                MultiChartsTradingView.trade(symbol, {\n                                    direction: common_types__WEBPACK_IMPORTED_MODULE_26__[\"BUY\"],\n                                    type: new_order_types__WEBPACK_IMPORTED_MODULE_28__[\"TYPE_LIMIT\"],\n                                    entry: selectedPrice\n                                });\n                            }\n                        });\n                    }\n\n                    if (sellTradable) {\n                        menu.push({\n                            position: 'top',\n                            text: __('actions.sell') + ' ' + displayName + ' ' + __('type.STOP') + ' ' + selectedPrice,\n                            click: function click() {\n                                MultiChartsTradingView.trade(symbol, {\n                                    direction: common_types__WEBPACK_IMPORTED_MODULE_26__[\"SELL\"],\n                                    type: new_order_types__WEBPACK_IMPORTED_MODULE_28__[\"TYPE_STOP\"],\n                                    entry: selectedPrice\n                                });\n                            }\n                        });\n                    }\n                } else if (+selectedPrice > lastPrice) {\n                    if (sellTradable) {\n                        menu.push({\n                            position: 'top',\n                            text: __('actions.sell') + ' ' + displayName + ' ' + __('type.LIMIT') + ' ' + selectedPrice,\n                            click: function click() {\n                                MultiChartsTradingView.trade(symbol, {\n                                    direction: common_types__WEBPACK_IMPORTED_MODULE_26__[\"SELL\"],\n                                    type: new_order_types__WEBPACK_IMPORTED_MODULE_28__[\"TYPE_LIMIT\"],\n                                    entry: selectedPrice\n                                });\n                            }\n                        });\n                    }\n\n                    if (buyTradable) {\n                        menu.push({\n                            position: 'top',\n                            text: __('actions.buy') + ' ' + displayName + ' ' + __('type.STOP') + ' ' + selectedPrice,\n                            click: function click() {\n                                MultiChartsTradingView.trade(symbol, {\n                                    direction: common_types__WEBPACK_IMPORTED_MODULE_26__[\"BUY\"],\n                                    type: new_order_types__WEBPACK_IMPORTED_MODULE_28__[\"TYPE_STOP\"],\n                                    entry: selectedPrice\n                                });\n                            }\n                        });\n                    }\n                }\n\n                if (buyTradable) {\n                    menu.push({\n                        position: 'top',\n                        text: __('actions.buy') + ' ' + displayName + ' ' + __('type.MARKET'),\n                        click: function click() {\n                            MultiChartsTradingView.trade(symbol, {\n                                direction: common_types__WEBPACK_IMPORTED_MODULE_26__[\"BUY\"]\n                            });\n                        }\n                    });\n                }\n\n                if (sellTradable) {\n                    menu.push({\n                        position: 'top',\n                        text: __('actions.sell') + ' ' + displayName + ' ' + __('type.MARKET'),\n                        click: function click() {\n                            MultiChartsTradingView.trade(symbol, {\n                                direction: common_types__WEBPACK_IMPORTED_MODULE_26__[\"SELL\"]\n                            });\n                        }\n                    });\n                }\n\n                if (menu.length > 0) {\n                    menu.push({ text: '-', position: 'top' });\n                }\n\n                return menu;\n            }\n        }\n    }, {\n        key: 'onOrientationChanged',\n        value: function onOrientationChanged() {\n            if (device__WEBPACK_IMPORTED_MODULE_7__[\"default\"].portrait()) {\n                this.tvWidget.documentElement().classList.replace(MOBILE_PORTRAIT, MOBILE_LANDSCAPE);\n            } else {\n                this.tvWidget.documentElement().classList.replace(MOBILE_LANDSCAPE, MOBILE_PORTRAIT);\n            }\n        }\n    }, {\n        key: 'initOrientationHandler',\n        value: function initOrientationHandler() {\n            var orieantationHadler = this.onOrientationChanged;\n            var orientationEvent = Object.prototype.hasOwnProperty.call(window, 'onorientationchange') ? 'orientationchange' : 'resize';\n\n            if (window.addEventListener) {\n                window.addEventListener(orientationEvent, orieantationHadler, false);\n            } else if (window.attachEvent) {\n                window.attachEvent(orientationEvent, orieantationHadler);\n            } else {\n                window[orientationEvent] = orieantationHadler;\n            }\n\n            this.tvWidget.documentElement().classList.add(device__WEBPACK_IMPORTED_MODULE_7__[\"default\"].landscape() ? MOBILE_LANDSCAPE : MOBILE_PORTRAIT);\n        }\n    }, {\n        key: 'save',\n        value: function save() {\n            var _this5 = this;\n\n            if (!this.tvWidget) {\n                return;\n            }\n\n            if (this.serverError) {\n                this.tvWidget.save(function (content) {\n                    localStorage.setItem(STORAGE_KEY, JSON.stringify({\n                        name: _this5.getChartName(),\n                        content: JSON.stringify({\n                            content: JSON.stringify(content)\n                        })\n                    }));\n                });\n            } else {\n                this.tvWidget.saveChartToServer(function () {}, function () {}, false, { chartName: this.getChartName() });\n            }\n        }\n    }, {\n        key: 'getChartName',\n        value: function getChartName() {\n            return CHART_NAME + '_' + this.theme;\n        }\n    }, {\n        key: 'changeTheme',\n        value: function changeTheme(theme) {\n            this.tvWidget.changeTheme(theme);\n            this.tvWidget.applyOverrides(chart_trading_view_TradingViewSettings__WEBPACK_IMPORTED_MODULE_14__[\"OVERRIDES\"][theme]);\n            this.tvWidget.applyStudiesOverrides(chart_trading_view_TradingViewSettings__WEBPACK_IMPORTED_MODULE_14__[\"STUDIES_OVERRIDES\"][theme]);\n        }\n    }, {\n        key: 'componentWillUnmount',\n        value: function componentWillUnmount() {\n            this.destroy();\n        }\n    }, {\n        key: 'destroy',\n        value: function destroy() {\n            var _this6 = this;\n\n            this._mounted = false;\n\n            if (this.tvEventsListener) {\n                this.tvEventsListener.destroy();\n                this.tvEventsListener = null;\n            }\n\n            if (this.tvDatafeed) {\n                this.tvDatafeed.destroy();\n                this.tvDatafeed = null;\n            }\n\n            if (this.tvTradingCentral) {\n                this.tvTradingCentral.destroy();\n                this.tvTradingCentral = null;\n            }\n\n            if (this.tvWidget) {\n                this.tvWidget.forEachChart(function (chart) {\n                    MultiChartsTradingView.removeTradings(_this6.getInstrument(chart.symbol()), chart);\n                });\n\n                if (this.tvWidget._getIFrameElement() && !this.tvWidget._getIFrameElement().contentWindow.ChartApiInstance) {\n                    this.tvWidget._getIFrameElement().contentWindow.ChartApiInstance = {\n                        destroy: function destroy() {}\n                    };\n                }\n\n                if (this.tvWidget._getIFrameElement() && !this.tvWidget._getIFrameElement().contentWindow.destroyChart) {\n                    this.tvWidget._getIFrameElement().contentWindow.destroyChart = function () {};\n                }\n\n                this.tvWidget.remove();\n                this.tvWidget = null;\n            }\n        }\n    }, {\n        key: 'minimize',\n        value: function minimize() {\n            this.setState({\n                minimized: true\n            });\n        }\n    }, {\n        key: 'restoreSize',\n        value: function restoreSize() {\n            this.setState({\n                minimized: false\n            });\n        }\n    }, {\n        key: 'changeInterval',\n        value: function changeInterval(period) {\n            this.tvWidget.setSymbol(this.tvWidget.symbolInterval().symbol, chart_trading_view_TradingViewSettings__WEBPACK_IMPORTED_MODULE_14__[\"PERIOD_TO_RESOLUTION_MAP\"][period]);\n        }\n    }, {\n        key: 'render',\n        value: function render() {\n            var _state = this.state,\n                ready = _state.ready,\n                minimized = _state.minimized;\n            var _props3 = this.props,\n                height = _props3.height,\n                className = _props3.className;\n\n            var classes = react_classset__WEBPACK_IMPORTED_MODULE_6___default()(_defineProperty({\n                'chart-box': true,\n                'chart-trading-view': true,\n                'minimized': minimized\n            }, className, !!className));\n            var styles = {};\n\n            if (height) {\n                styles = {\n                    height: height + 'px',\n                    minHeight: height + 'px',\n                    maxHeight: height + 'px'\n                };\n            }\n\n            return react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\n                'div',\n                { className: classes, style: styles },\n                react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\n                    'div',\n                    { className: 'multi-charts-trading-view-wrapper' },\n                    !ready && react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(chart_components_ChartLoading__WEBPACK_IMPORTED_MODULE_29__[\"default\"], null),\n                    react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement('div', { id: underscore__WEBPACK_IMPORTED_MODULE_1__[\"uniqueId\"]('chart-trading-view-'), ref: CHART_REF_KEY,\n                        className: 'chart-trading-view-container hidden-minimized' })\n                )\n            );\n        }\n    }, {\n        key: 'setSymbol',\n        value: function setSymbol(symbol) {\n            if (this.getChartWidgetCollection().lock.symbol.value()) {\n                this.tvWidget.forEachChart(function (chart) {\n                    return chart.setSymbol(symbol);\n                });\n            } else {\n                this.tvWidget.activeChart().setSymbol(symbol);\n            }\n        }\n    }], [{\n        key: 'getSelectedInstrumentSymbol',\n        value: function getSelectedInstrumentSymbol() {\n            return Object(store_ui_selectors__WEBPACK_IMPORTED_MODULE_16__[\"getUiSelectedInstrumentCategorySymbol\"])(store.getState());\n        }\n    }, {\n        key: 'getDeepLinkInterval',\n        value: function getDeepLinkInterval() {\n            var deepLinkPath = Object(deep_links_deep_link_selectors__WEBPACK_IMPORTED_MODULE_17__[\"getDeepLinkPath\"])(store.getState(), true);\n\n            if (deepLinkPath === deep_links_deep_link_consts__WEBPACK_IMPORTED_MODULE_24__[\"PATH\"].DETAILS) {\n                var deepLinkChart = Object(deep_links_deep_link_selectors__WEBPACK_IMPORTED_MODULE_17__[\"getDeepLinkChart\"])(store.getState());\n\n                if (deepLinkChart) {\n                    return chart_trading_view_TradingViewSettings__WEBPACK_IMPORTED_MODULE_14__[\"PERIOD_TO_RESOLUTION_MAP\"][deepLinkChart.toLowerCase()];\n                }\n            }\n        }\n    }, {\n        key: 'prepareLocalSavedChart',\n        value: function prepareLocalSavedChart(localSavedChart) {\n            var parsedLocalSavedChart = JSON.parse(localSavedChart);\n\n            if (parsedLocalSavedChart.name) {\n                return {\n                    data: {\n                        data: parsedLocalSavedChart\n                    }\n                };\n            } else {\n                return {\n                    data: {\n                        data: {\n                            name: '',\n                            content: JSON.stringify({\n                                content: localSavedChart\n                            })\n                        }\n                    }\n                };\n            }\n        }\n    }, {\n        key: 'trade',\n        value: function trade(symbol) {\n            var properties = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n            if (properties.direction === common_types__WEBPACK_IMPORTED_MODULE_26__[\"BUY\"] && Object(instruments_instruments_utils__WEBPACK_IMPORTED_MODULE_21__[\"isBuyTradable\"])(symbol)) {\n                core__WEBPACK_IMPORTED_MODULE_27___default.a.trigger('ui:new-position', _extends({ symbolOrId: symbol }, properties));\n            } else if (properties.direction === common_types__WEBPACK_IMPORTED_MODULE_26__[\"SELL\"] && Object(instruments_instruments_utils__WEBPACK_IMPORTED_MODULE_21__[\"isSellTradable\"])(symbol)) {\n                core__WEBPACK_IMPORTED_MODULE_27___default.a.trigger('ui:new-position', _extends({ symbolOrId: symbol }, properties));\n            }\n        }\n    }, {\n        key: 'initTradings',\n        value: function initTradings(instrument, chart, theme) {\n            if (store_settings__WEBPACK_IMPORTED_MODULE_9___default.a.isChartTradingViewTradingLinesEnabled()) {\n                if (!chart._eventsListener) {\n                    chart._eventsListener = underscore__WEBPACK_IMPORTED_MODULE_1__[\"extend\"]({}, Backbone__WEBPACK_IMPORTED_MODULE_3___default.a.Events);\n                }\n\n                chart._eventsListener.listenTo(instrument.getPositions(), 'add', function (position) {\n                    chart._positions.push(Object(chart_trading_view_TradingViewLines__WEBPACK_IMPORTED_MODULE_25__[\"createPositionLine\"])(chart, instrument, position, theme));\n                });\n                chart._eventsListener.listenTo(instrument.getOrders(), 'add', function (order) {\n                    chart._orders.push(Object(chart_trading_view_TradingViewLines__WEBPACK_IMPORTED_MODULE_25__[\"createOrderLine\"])(chart, instrument, order, theme));\n                });\n\n                MultiChartsTradingView.initPositions(instrument, chart, theme);\n                MultiChartsTradingView.initOrders(instrument, chart, theme);\n            }\n        }\n    }, {\n        key: 'removeTradings',\n        value: function removeTradings(instrument, chart) {\n            if (chart._eventsListener) {\n                chart._eventsListener.stopListening(instrument.getPositions(), 'add');\n                chart._eventsListener.stopListening(instrument.getOrders(), 'add');\n                delete chart._eventsListener;\n            }\n\n            if (chart._positions) {\n                underscore__WEBPACK_IMPORTED_MODULE_1__[\"each\"](chart._positions, function (position) {\n                    return position.remove();\n                });\n                delete chart._positions;\n            }\n\n            if (chart._orders) {\n                underscore__WEBPACK_IMPORTED_MODULE_1__[\"each\"](chart._orders, function (order) {\n                    return order.remove();\n                });\n                delete chart._orders;\n            }\n        }\n    }, {\n        key: 'initOrders',\n        value: function initOrders(instrument, chart, theme) {\n            if (!chart._orders) {\n                chart._orders = [];\n            }\n\n            underscore__WEBPACK_IMPORTED_MODULE_1__[\"each\"](instrument.getOrders().models, function (order) {\n                chart._orders.push(Object(chart_trading_view_TradingViewLines__WEBPACK_IMPORTED_MODULE_25__[\"createOrderLine\"])(chart, instrument, order, theme));\n            });\n        }\n    }, {\n        key: 'initPositions',\n        value: function initPositions(instrument, chart, theme) {\n            if (!chart._positions) {\n                chart._positions = [];\n            }\n\n            underscore__WEBPACK_IMPORTED_MODULE_1__[\"each\"](instrument.getPositions().models, function (position) {\n                chart._positions.push(Object(chart_trading_view_TradingViewLines__WEBPACK_IMPORTED_MODULE_25__[\"createPositionLine\"])(chart, instrument, position, theme));\n            });\n        }\n    }]);\n\n    return MultiChartsTradingView;\n}(react__WEBPACK_IMPORTED_MODULE_0___default.a.Component);\n\nMultiChartsTradingView.defaultProps = {\n    autosize: true,\n    disabled_features: chart_trading_view_TradingViewSettings__WEBPACK_IMPORTED_MODULE_14__[\"FEATURES\"].DISABLED,\n    enabled_features: chart_trading_view_TradingViewSettings__WEBPACK_IMPORTED_MODULE_14__[\"FEATURES\"].ENABLED,\n    interval: '5',\n    library_path: 'tv/',\n    locale: common_localization__WEBPACK_IMPORTED_MODULE_2__[\"getCurrentLanguage\"]() || 'en',\n    charts_storage_url: server__WEBPACK_IMPORTED_MODULE_20___default.a.tradingViewService(),\n    client_id: Object(common_sha1__WEBPACK_IMPORTED_MODULE_10__[\"default\"])(store_settings__WEBPACK_IMPORTED_MODULE_9___default.a.getBrandName()),\n    user_id: Object(common_sha1__WEBPACK_IMPORTED_MODULE_10__[\"default\"])(user_user_model__WEBPACK_IMPORTED_MODULE_13___default.a.getCustomerId()),\n    charts_storage_api_version: '1.1',\n    auto_save_delay: 1,\n    link_to_tradingview: false,\n    timezone: Object(chart_trading_view_TradingViewTimezones__WEBPACK_IMPORTED_MODULE_15__[\"getAvailableTimezone\"])(user_user_model__WEBPACK_IMPORTED_MODULE_13___default.a.getUserCommonData().getUserTimezoneObject()),\n    custom_css_url: '' + window.location.origin + window.location.pathname + '/' + _css_trading_view_index_scss__WEBPACK_IMPORTED_MODULE_22___default.a,\n    time_frames: [{ text: '1d', resolution: '1', description: '1 Day' }, { text: '5d', resolution: '5', description: '5 Days' }, { text: '1m', resolution: '30', description: '1 Month' }, { text: '3m', resolution: '60', description: '3 Months' }, { text: '6m', resolution: '120', description: '6 Months' }, { text: '1y', resolution: 'D', description: '1 Year' }, { text: '5y', resolution: 'W', description: '5 Years' }]\n};\n\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (MultiChartsTradingView);\n\n//# sourceURL=webpack:///./src/js/modules/chart/multi-charts/components/MultiChartsTradingView.jsx?");

/***/ })

}]);