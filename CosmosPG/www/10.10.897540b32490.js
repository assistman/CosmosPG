(window["webpackJsonp"] = window["webpackJsonp"] || []).push([[10],{

/***/ "./src/js/modules/chart/highcharts/chart-panel/chart.panel.multi.view.js":
/*!*******************************************************************************!*\
  !*** ./src/js/modules/chart/highcharts/chart-panel/chart.panel.multi.view.js ***!
  \*******************************************************************************/
/*! no static exports found */
/*! ModuleConcatenation bailout: Module is not an ECMAScript module */
/***/ (function(module, exports, __webpack_require__) {

eval("/* WEBPACK VAR INJECTION */(function(_, $) {var __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_RESULT__ = (function (require, exports, module) {\n    var ChartPanelView = __webpack_require__(/*! ./chart.panel.view */ \"./src/js/modules/chart/highcharts/chart-panel/chart.panel.view.js\");\n    var $ = __webpack_require__(/*! jquery */ \"./src/vendors/jbone.js\");\n\n    var _ = __webpack_require__(/*! underscore */ \"./node_modules/underscore/underscore.js\");\n\n    var user = __webpack_require__(/*! modules/user/user.model */ \"./src/js/modules/user/user.model.js\");\n    var instruments = __webpack_require__(/*! store/instruments */ \"./src/js/store/instruments.js\");\n\n    var Instrument = __webpack_require__(/*! modules/instruments/components/Instrument.jsx */ \"./src/js/modules/instruments/components/Instrument.jsx\");\n    var PureButtonBuyLabel = __webpack_require__(/*! modules/instruments/components/PureButtonBuyLabel */ \"./src/js/modules/instruments/components/PureButtonBuyLabel.jsx\").default;\n    var PureButtonSellLabel = __webpack_require__(/*! modules/instruments/components/PureButtonSellLabel */ \"./src/js/modules/instruments/components/PureButtonSellLabel.jsx\").default;\n    var React = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n    var ReactDOM = __webpack_require__(/*! react-dom */ \"./node_modules/react-dom/index.js\");\n    var GridCellRateWithButton = __webpack_require__(/*! modules/grid/jsx/grid.cell.rate.with.button */ \"./src/js/modules/grid/jsx/grid.cell.rate.with.button.jsx\");\n    var ChartsConfigurator = __webpack_require__(/*! ../charts.configurator */ \"./src/js/modules/chart/highcharts/charts.configurator.js\");\n    var ChartToolbar = __webpack_require__(/*! ../chart.toolbar.view */ \"./src/js/modules/chart/highcharts/chart.toolbar.view.js\");\n\n    module.exports = ChartPanelView.extend({\n\n        size: {},\n\n        events: function events() {\n            return _.extend({}, _.result(ChartPanelView.prototype, 'events'), {\n                'click': 'setActive',\n                'click .fn-toolbar-more': 'showToolbar',\n                'click .fn-toolbar-drawings': 'stopSubMenuPropagation',\n                'click .fn-toolbar-cursors': 'stopSubMenuPropagation',\n                'click .fn-remove-chart': 'removeChart'\n            });\n        },\n\n        setActive: function setActive() {\n            if (!this.active) {\n                this.trigger('multicharts:setActive');\n            }\n        },\n\n        initialize: function initialize() {\n            var _this = this;\n\n            ChartPanelView.prototype.initialize.apply(this, arguments);\n\n            this.enableTrading = false;\n\n            this.throttledHandleResize = _.throttle(this.handleResize.bind(this), 200);\n            $(window).on('resize', this.throttledHandleResize);\n\n            this.render();\n\n            _.after(function () {\n                return _this.handleResize();\n            }, 0);\n\n            if (this.options.symbol) {\n                this.onInstrumentSelected(this.options.symbol, undefined, true);\n                delete this.options.symbol;\n            } else if (this.instrument) {\n                this.resubscribeChart();\n            } else {\n                this.showSearch(true);\n            }\n\n            if (this.comparisonMode) {\n                this.initComparisonInstruments();\n                _.each(this.options.comparison, function (symbol) {\n                    var instrument = instruments.getInstrumentBySymbol(symbol);\n\n                    if (instrument && instrument.isVisible()) {\n                        _this.addComparisonInstrument(instrument.getSymbol());\n                    }\n                });\n            }\n\n            if (!this.options.comparison) {\n                this.options.comparison = [];\n            }\n\n            if (this.options.pending) {\n                this.$el.addClass('chart-pending');\n            }\n        },\n\n        handleResize: function handleResize() {\n            var width = this.el.clientWidth;\n\n            if (width >= 500) {\n                this.$el.removeClass('mc-panel-size-1 mc-panel-size-2 mc-panel-size-3');\n            } else if (width >= 450 && width < 500) {\n                this.$el.removeClass('mc-panel-size-2 mc-panel-size-3');\n                this.$el.addClass('mc-panel-size-1');\n            } else if (width >= 320 && width < 450) {\n                this.$el.removeClass('mc-panel-size-1 mc-panel-size-3');\n                this.$el.addClass('mc-panel-size-2');\n            } else if (width < 320) {\n                this.$el.removeClass('mc-panel-size-1 mc-panel-size-2');\n                this.$el.addClass('mc-panel-size-3');\n            }\n        },\n\n        initToolbar: function initToolbar() {\n            if (!this.chartToolbar) {\n                this.chartToolbar = new ChartToolbar({\n                    parent: $('body'),\n                    chartPanel: this,\n                    relatedTo: this.$el.find('.fn-toolbar-more'),\n                    comparisonMode: this.comparisonMode,\n                    period: this.period,\n                    range: this.range,\n                    type: this.type,\n                    cursor: this.cursor,\n                    rateLine: this.rateLine\n                });\n            }\n        },\n\n        showToolbar: function showToolbar(skipEvents) {\n            this.initToolbar();\n\n            this.chartToolbar.show(skipEvents === true);\n        },\n\n        hideToolbar: function hideToolbar() {\n            this.chartToolbar && this.chartToolbar.hide();\n        },\n\n        getToolbar: function getToolbar() {\n            return this.chartToolbar;\n        },\n\n        stopSubMenuPropagation: function stopSubMenuPropagation(e) {\n            if (e.target === e.currentTarget || e.target.parentElement === e.currentTarget) {\n                e.stopPropagation();\n            }\n        },\n\n        render: function render() {\n            this.template = _.template(__webpack_require__(/*! modules/chart/highcharts/chart-panel/templates/chart.panel.multi.html */ \"./src/js/modules/chart/highcharts/chart-panel/templates/chart.panel.multi.html\"));\n            this.$el.addClass('multi');\n\n            ChartPanelView.prototype.render.call(this);\n\n            this.$buyButton = this.$el.find('.chart-panel .chart-buy tr')[0];\n            this.$sellButton = this.$el.find('.chart-panel .chart-sell tr')[0];\n        },\n\n        initBuySellButtons: function initBuySellButtons() {\n            var buyEl = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.$buyButton;\n            var sellEl = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.$sellButton;\n\n            if (!buyEl || !sellEl) {\n                return;\n            }\n\n            this.destroyBuySellButtons(buyEl, sellEl);\n\n            if (user.getUserCommonData().isAdvancedTradingView()) {\n                var symbol = this.instrument.getSymbol();\n\n                this.$el.find('.chart-panel .chart-buy span').addClass('hidden');\n                this.$el.find('.chart-panel .chart-sell span').addClass('hidden');\n\n                ReactDOM.render(React.createElement(Instrument.Bid, { symbol: symbol, render: PureButtonSellLabel }), sellEl);\n                ReactDOM.render(React.createElement(Instrument.Ask, { symbol: symbol, render: PureButtonBuyLabel }), buyEl);\n            } else {\n                ReactDOM.render(React.createElement(GridCellRateWithButton, {\n                    type: 'Sell',\n                    column: { name: 'Sell', key: 'bid', direction: 'bidDirection' },\n                    model: this.instrument,\n                    display: 'block',\n                    isSelected: true\n                }), sellEl);\n                ReactDOM.render(React.createElement(GridCellRateWithButton, {\n                    type: 'Buy',\n                    column: { name: 'Buy', key: 'ask', direction: 'askDirection' },\n                    model: this.instrument,\n                    display: 'block',\n                    isSelected: false\n                }), buyEl);\n            }\n        },\n\n        onInstrumentSelected: function onInstrumentSelected(symbol, model, preventSave) {\n            var changed = ChartPanelView.prototype.onInstrumentSelected.apply(this, arguments);\n\n            if (!preventSave && changed) {\n                this.saveInstrument(symbol);\n            }\n        },\n\n        onChangePeriod: function onChangePeriod(period, preventSave) {\n            ChartPanelView.prototype.onChangePeriod.apply(this, arguments);\n\n            if (!preventSave) {\n                this.savePeriod(period);\n            }\n        },\n\n        onChangeRange: function onChangeRange(range, preventSave) {\n            ChartPanelView.prototype.onChangeRange.apply(this, arguments);\n\n            if (!preventSave) {\n                this.saveRange(range);\n            }\n        },\n\n        enableComparisonMode: function enableComparisonMode() {\n            var _this2 = this;\n\n            ChartPanelView.prototype.enableComparisonMode.apply(this, arguments);\n            this.saveType(ChartsConfigurator.comparisonType);\n            this.saveRange(this.range);\n\n            if (this.comparisonMode) {\n                _.each(this.options.comparison, function (symbol) {\n                    var instrument = instruments.getInstrumentBySymbol(symbol);\n\n                    if (instrument && instrument.isVisible()) {\n                        _this2.addComparisonInstrument(instrument.getSymbol());\n                    }\n                });\n            }\n        },\n\n        disableComparisonMode: function disableComparisonMode(type, period) {\n            ChartPanelView.prototype.disableComparisonMode.apply(this, arguments);\n            // if (!preventSave)\n            this.saveType(type);\n            this.savePeriod(period);\n        },\n\n        addComparisonInstrument: function addComparisonInstrument(symbol) {\n            ChartPanelView.prototype.addComparisonInstrument.apply(this, arguments);\n            // if (!preventSave)\n            this.saveComparison(symbol, true);\n\n            var index = this.options.comparison.indexOf(symbol);\n\n            if (index < 0) {\n                this.options.comparison.push(symbol);\n            }\n        },\n\n        removeComparisonInstrument: function removeComparisonInstrument(symbol) {\n            ChartPanelView.prototype.removeComparisonInstrument.apply(this, arguments);\n            // if (!preventSave)\n            this.saveComparison(symbol, false);\n\n            var index = this.options.comparison.indexOf(symbol);\n\n            if (index < 0) {\n                this.options.comparison.splice(index, 1);\n            }\n        },\n\n        onChangeType: function onChangeType(type, preventSave) {\n            ChartPanelView.prototype.onChangeType.apply(this, arguments);\n\n            if (!preventSave) {\n                this.saveType(type);\n            }\n        },\n\n        onChangeRateLine: function onChangeRateLine(rateLine, preventSave) {\n            ChartPanelView.prototype.onChangeRateLine.apply(this, arguments);\n\n            if (!preventSave) {\n                this.saveRateLine(rateLine);\n            }\n        },\n\n        onChangeCursor: function onChangeCursor(cursor, preventSave) {\n            ChartPanelView.prototype.onChangeCursor.apply(this, arguments);\n\n            if (!preventSave) {\n                this.saveCursor(cursor);\n            }\n        },\n\n        saveInstrument: function saveInstrument(symbol) {\n            this.trigger('multicharts:saveInstrument', symbol);\n        },\n\n        saveType: function saveType(type) {\n            this.trigger('multicharts:saveType', type);\n        },\n\n        savePeriod: function savePeriod(period) {\n            this.trigger('multicharts:savePeriod', period);\n        },\n\n        saveRange: function saveRange(range) {\n            this.trigger('multicharts:saveRange', range);\n        },\n\n        saveRateLine: function saveRateLine(rateLine) {\n            this.trigger('multicharts:saveRateLine', rateLine);\n        },\n\n        saveCursor: function saveCursor(cursor) {\n            this.trigger('multicharts:saveCursor', cursor);\n        },\n\n        saveComparison: function saveComparison(sybol, add) {\n            this.trigger('multicharts:saveComparison', sybol, add);\n        },\n\n        onSearchResultClick: function onSearchResultClick(symbol) {\n            this.onInstrumentSelected(symbol);\n        },\n\n        removeChart: function removeChart() {\n            this.setInstrument(null);\n            this.chart.destroy();\n            this.destroyBuySellButtons();\n            this.chartSubscription.stop();\n            this.showSearch(true);\n            this.trigger('multicharts:remove');\n        },\n\n        getLoadingContainer: function getLoadingContainer() {\n            return this.$el;\n        },\n\n\n        destroy: function destroy() {\n            ChartPanelView.prototype.destroy.call(this);\n            this.chartToolbar && this.chartToolbar.destroy();\n            $(window).off('resize', this.throttledHandleResize);\n        }\n\n    });\n}).call(exports, __webpack_require__, exports, module),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! underscore */ \"./node_modules/underscore/underscore.js\"), __webpack_require__(/*! jquery */ \"./src/vendors/jbone.js\")))\n\n//# sourceURL=webpack:///./src/js/modules/chart/highcharts/chart-panel/chart.panel.multi.view.js?");

/***/ }),

/***/ "./src/js/modules/chart/highcharts/chart-panel/templates/chart.panel.multi.html":
/*!**************************************************************************************!*\
  !*** ./src/js/modules/chart/highcharts/chart-panel/templates/chart.panel.multi.html ***!
  \**************************************************************************************/
/*! no static exports found */
/*! ModuleConcatenation bailout: Module is not an ECMAScript module */
/***/ (function(module, exports) {

eval("module.exports = \"<div class=\\\"chart-panel-content\\\">\\n    <div class=\\\"chart-header\\\">\\n        <div class=\\\"chart-info-wrapper\\\">\\n            <div class=\\\"chart-info fn-show-search\\\">\\n                <div class=\\\"chart-title\\\"></div>\\n                <div class=\\\"chart-subtitle\\\"></div>\\n            </div>\\n            <div class=\\\"chart-basket\\\">\\n                <div class=\\\"chart-basket-title\\\"></div>\\n                <div class=\\\"chart-basket-info\\\"></div>\\n            </div>\\n            <div class=\\\"chart-search-button icon-search-ico fn-show-search\\\"></div>\\n            <div class=\\\"chart-recycle-button icon-garbage fn-remove-chart\\\"></div>\\n        </div>\\n        <div class=\\\"chart-toolbar\\\">\\n            <div class=\\\"chart-buy-sell\\\">\\n                <div class=\\\"chart-sell\\\">\\n                    <span><%-__('actions.sell')%></span>\\n                    <table>\\n                        <tr></tr>\\n                    </table>\\n                </div>\\n                <div class=\\\"chart-buy\\\">\\n                    <span><%-__('actions.buy')%></span>\\n                    <table>\\n                        <tr></tr>\\n                    </table>\\n                </div>\\n            </div>\\n            <div class=\\\"expand-toolbar\\\">\\n                <div class=\\\"btn fn-toolbar-more chart-toolbar-more\\\" title=\\\"More\\\"><i class=\\\"icon hamburger\\\"></i></div>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"chart-instruments-comparison-panel\\\"></div>\\n    <div class=\\\"chart-container\\\"></div>\\n    <div class=\\\"chart-fullscreen-notification\\\">\\n        <%-__('chart.fullscreen_notification')%>\\n    </div>\\n    <div class=\\\"chart-search\\\">\\n        <div class=\\\"chart-search-close fn-hide-search\\\"><i class=\\\"icon-close-blue\\\"></i></div>\\n        <div class=\\\"chart-search-block-wrapper\\\"></div>\\n    </div>\\n</div>\\n\";\n\n//# sourceURL=webpack:///./src/js/modules/chart/highcharts/chart-panel/templates/chart.panel.multi.html?");

/***/ }),

/***/ "./src/js/modules/chart/highcharts/multi-charts/multi.charts.view.js":
/*!***************************************************************************!*\
  !*** ./src/js/modules/chart/highcharts/multi-charts/multi.charts.view.js ***!
  \***************************************************************************/
/*! no static exports found */
/*! ModuleConcatenation bailout: Module is not an ECMAScript module */
/***/ (function(module, exports, __webpack_require__) {

eval("/* WEBPACK VAR INJECTION */(function(_, Backbone, $) {var __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_RESULT__ = (function (require, exports, module) {\n    var $ = __webpack_require__(/*! jquery */ \"./src/vendors/jbone.js\");\n    var _ = __webpack_require__(/*! underscore */ \"./node_modules/underscore/underscore.js\");\n    var Backbone = __webpack_require__(/*! Backbone */ \"./node_modules/backbone/backbone.js\");\n    var BaseView = __webpack_require__(/*! view */ \"./src/js/core/core.view.js\");\n    var ChartDispatcher = __webpack_require__(/*! ../charts.dispatcher */ \"./src/js/modules/chart/highcharts/charts.dispatcher.js\");\n    var ChartPanelMultiView = __webpack_require__(/*! ../chart-panel/chart.panel.multi.view */ \"./src/js/modules/chart/highcharts/chart-panel/chart.panel.multi.view.js\");\n    var core = __webpack_require__(/*! core */ \"./src/js/core.js\");\n    var Response = __webpack_require__(/*! utils/response */ \"./src/js/utils/response.js\").default;\n    var subscription = __webpack_require__(/*! modules/subscription/subscription */ \"./src/js/modules/subscription/subscription.js\");\n    var user = __webpack_require__(/*! modules/user/user.model */ \"./src/js/modules/user/user.model.js\");\n\n    var _require = __webpack_require__(/*! intro.js */ \"./node_modules/intro.js/intro.js\"),\n        introJs = _require.introJs;\n\n    var _require2 = __webpack_require__(/*! common.types */ \"./src/js/common.types.js\"),\n        MULTI_CHARTS_PATH = _require2.MULTI_CHARTS_PATH;\n\n    var _require3 = __webpack_require__(/*! utils/eventos.trading-tools.service */ \"./src/js/utils/eventos.trading-tools.service.js\"),\n        sendEventosMultiChartsAction = _require3.sendEventosMultiChartsAction;\n\n    var _require4 = __webpack_require__(/*! store/ui.actions */ \"./src/js/store/ui.actions.js\"),\n        setMultiChartsEnabled = _require4.setMultiChartsEnabled;\n\n    var _require5 = __webpack_require__(/*! common.types */ \"./src/js/common.types.js\"),\n        SPREAD_BET_INSTRUMENT_SYMBOL_IDENTIFIER = _require5.SPREAD_BET_INSTRUMENT_SYMBOL_IDENTIFIER;\n\n    var template = _.template(__webpack_require__(/*! ./templates/multi.charts.view.html */ \"./src/js/modules/chart/highcharts/multi-charts/templates/multi.charts.view.html\"));\n\n    var MultiChartsLayouts = __webpack_require__(/*! ./multi.charts.layouts */ \"./src/js/modules/chart/highcharts/multi-charts/multi.charts.layouts.js\");\n    var MultiChartsPending = __webpack_require__(/*! ./multi.charts.pending */ \"./src/js/modules/chart/highcharts/multi-charts/multi.charts.pending.js\").default;\n\n    var introjsTemplate = _.template('\\n    <% if (header) {%>\\n        <div class=\\'introjs-tooltiptext-header\\'><%=header%></div>\\n    <% }%>\\n    <% if (body) {%>\\n        <div class=\\'introjs-tooltiptext-body\\'><%=body%></div>\\n    <% }%>');\n\n    module.exports = BaseView.extend({\n\n        size: {},\n\n        events: {\n            'click .layouts-toolbar .fn-change-layout': 'changeLayout',\n            'click .controls-toolbar .fn-toolbar-fullscreen': 'toggleFullscreen',\n            'click .controls-toolbar .fn-toolbar-restore-size': 'restoreSize',\n            'click .tour-toolbar .fn-start-tour': 'startTour',\n            'click .fn-close': 'close'\n        },\n\n        initialize: function initialize(options) {\n            BaseView.prototype.initialize.apply(this, arguments);\n            core.trigger('chart:display:hide');\n\n            this.intro = introJs();\n\n            this.render();\n\n            this.$chartsContainer = this.$el.find('.multi-charts-container');\n            this.$fullscreenNotification = this.$el.find('.charts-fullscreen-notification');\n\n            var multiChartsSettings = user.getUserCommonData().getMultiChartsSettings();\n\n            this.setLayout(MultiChartsLayouts.isLayoutAvailable(multiChartsSettings) ? multiChartsSettings.layout : MultiChartsLayouts.DEFAULT, !MultiChartsLayouts.isLayoutAvailable(multiChartsSettings));\n            this.initCharts(multiChartsSettings);\n\n            this.initTour();\n\n            if (!multiChartsSettings) {\n                this.startTour();\n            } else if (multiChartsSettings.charts && MultiChartsPending.isStatusAdded()) {\n                MultiChartsPending.view();\n                this.startTour();\n            }\n\n            MultiChartsPending.clear();\n\n            __eventos('tradingPlatform:multiCharts:display', {});\n            sendEventosMultiChartsAction();\n            core.trigger('chart:display:hide');\n\n            this.listenTo(core, 'ui:instruments:instrument-selected', this.instrumentRowSelected.bind(this));\n        },\n\n        render: function render() {\n            BaseView.prototype.render.call(this);\n            this.$el.html(template({ layouts: MultiChartsLayouts.ALL }));\n\n            if (this.options.hideClose) {\n                this.$el.find('.multi-charts-close').remove();\n            }\n        },\n\n\n        initCharts: function initCharts(multiChartsSettings) {\n            var _this = this;\n\n            var symbols = [];\n            var pendingCharts = MultiChartsPending.getAll();\n\n            this.charts = _.map(this.$el.find('.multi-charts-container > div'), function (el, index) {\n                var settings = multiChartsSettings && multiChartsSettings.charts && multiChartsSettings.charts[index] ? multiChartsSettings.charts[index] : {};\n\n                var chart = new ChartPanelMultiView(_.extend({\n                    parent: el,\n                    chartId: 'multi' + (index + 1),\n                    multiChartIndex: index,\n                    pending: pendingCharts.indexOf(index) >= 0,\n                    active: index === 0\n                }, settings));\n\n                _this.listenTo(chart, 'multicharts:saveInstrument', function (symbol) {\n                    sendEventosMultiChartsAction(symbol);\n                    ChartDispatcher.saveMultiChartsSettings(index, 'symbol', symbol);\n                });\n                _this.listenTo(chart, 'multicharts:savePeriod', function (period) {\n                    return ChartDispatcher.saveMultiChartsSettings(index, 'period', period);\n                });\n                _this.listenTo(chart, 'multicharts:saveRange', function (range) {\n                    return ChartDispatcher.saveMultiChartsSettings(index, 'range', range);\n                });\n                _this.listenTo(chart, 'multicharts:saveType', function (type) {\n                    return ChartDispatcher.saveMultiChartsSettings(index, 'type', type);\n                });\n                _this.listenTo(chart, 'multicharts:saveRateLine', function (rateLine) {\n                    return ChartDispatcher.saveMultiChartsSettings(index, 'rateLine', rateLine);\n                });\n                _this.listenTo(chart, 'multicharts:saveCursor', function (cursor) {\n                    return ChartDispatcher.saveMultiChartsSettings(index, 'cursor', cursor);\n                });\n                _this.listenTo(chart, 'multicharts:saveComparison', function (symbol, add) {\n                    return ChartDispatcher.saveComparison(index, symbol, add);\n                });\n                _this.listenTo(chart, 'multicharts:remove', function () {\n                    return ChartDispatcher.removeMultiChartsSettings(index);\n                });\n                _this.listenTo(chart, 'multicharts:setActive', function () {\n                    return _this.setActive(index);\n                });\n\n                symbols.push(settings.symbol);\n\n                return chart;\n            });\n            subscription.update(_.compact(symbols), []);\n\n            this.setActive();\n            this.reflowAll();\n        },\n\n        close: function close() {\n            if (this.size.fullscreen) {\n                this.fullscreenOut();\n            }\n\n            var fragment = Backbone.history.fragment;\n\n            store.dispatch(setMultiChartsEnabled(false));\n            core.navigate(fragment.substr(MULTI_CHARTS_PATH.length), { trigger: false });\n        },\n\n        reflowAll: function reflowAll() {\n            _.each(this.charts, function (chart) {\n                return chart.chart.reflow();\n            });\n        },\n\n        handleResizeAll: function handleResizeAll() {\n            _.each(this.charts, function (chart) {\n                return _.isFunction(chart.handleResize) && chart.handleResize();\n            });\n        },\n\n        changeLayout: function changeLayout(event) {\n            this.setLayout(event.target.dataset.layout, true);\n        },\n        setLayout: function setLayout(type, save) {\n            var element = this.$chartsContainer;\n            var prefix = 'cl-';\n\n            _.each(_.filter(element[0].classList, function (className) {\n                return className.indexOf(prefix) === 0;\n            }), function (className) {\n                return element.removeClass(className);\n            });\n            element.addClass('' + (type.indexOf(prefix) !== 0 ? prefix : '') + type);\n\n            var activeButton = this.$el.find('.layouts-toolbar .active');\n\n            if (activeButton) {\n                activeButton.removeClass('active');\n            }\n\n            activeButton = this.$el.find('.layouts-toolbar [data-layout=\\'' + type + '\\']');\n            activeButton.addClass('active');\n\n            this.layout = type;\n            this.handleResizeAll();\n            this.reflowAll();\n\n            if (save) {\n                user.getUserCommonData().saveMultiChartsSettings({ layout: this.layout });\n            }\n\n            var activeChart = this.getActiveChart();\n\n            if (activeChart) {\n                activeChart.$el.parent().css('display') === 'none' && this.setActive();\n            }\n        },\n\n\n        setActive: function setActive() {\n            var activeIndex = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n\n            _.each(this.charts, function (chart, index) {\n                if (chart.active) {\n                    chart.active = false;\n                    chart.$el.removeClass('chart-active');\n                }\n\n                if (index === activeIndex) {\n                    chart.active = true;\n                    chart.$el.addClass('chart-active');\n                }\n            });\n        },\n\n        getActiveChart: function getActiveChart() {\n            return _.findWhere(this.charts, { active: true });\n        },\n\n        instrumentRowSelected: function instrumentRowSelected(symbol, click) {\n            if (!click) {\n                return;\n            }\n\n            var activeChart = this.getActiveChart();\n\n            if (activeChart) {\n                activeChart.subscribe(symbol);\n            }\n        },\n\n        destroy: function destroy() {\n            _.each(this.charts, function (chart) {\n                chart.destroy();\n            });\n            BaseView.prototype.destroy.call(this);\n        },\n\n        removeFullscreenOutKeyboardListener: function removeFullscreenOutKeyboardListener() {\n            if (this.size.escapeKeyboardListener) {\n                this.size.escapeKeyboardListener.remove();\n                delete this.size.escapeKeyboardListener;\n            }\n        },\n\n        fullscreenOut: function fullscreenOut() {\n            this.$el.removeClass('fullscreened');\n            this.$el.appendTo(this.size.parent);\n\n            this.removeFullscreenOutKeyboardListener();\n        },\n\n        toggleFullscreen: function toggleFullscreen() {\n            var _this2 = this;\n\n            if (this.size.fullscreen) {\n                this.fullscreenOut();\n            } else {\n                this.$el.addClass('fullscreened');\n                this.size.parent = this.$el.parent();\n                this.$el.appendTo($('body'));\n\n                if (Response.desktop()) {\n                    this.$fullscreenNotification.css('display', 'block');\n                    this.$fullscreenNotification.fadeOut({\n                        duration: 2000,\n                        complete: function complete() {\n                            return _this2.$fullscreenNotification.css('display', 'none');\n                        },\n                        step: function step(delta) {\n                            return _this2.$fullscreenNotification.css('opacity', delta * 0.6);\n                        }\n                    });\n\n                    this.size.escapeKeyboardListener = this.addKeyboardListener(27, this.toggleFullscreen.bind(this));\n                }\n            }\n\n            this.reflowAll();\n            this.size.fullscreen = !this.size.fullscreen;\n        },\n        restoreSize: function restoreSize() {\n            if (this.size.fullscreen) {\n                this.toggleFullscreen();\n            }\n        },\n        addKeyboardListener: function addKeyboardListener(code, fn, useCapture) {\n            var handler = function handler(event) {\n                event = event || window.event;\n                event.keyCode === code && fn();\n            };\n\n            document.addEventListener('keydown', handler, useCapture || false);\n\n            return {\n                remove: function remove() {\n                    document.removeEventListener('keydown', handler);\n                }\n            };\n        },\n\n\n        startTour: function startTour() {\n            var _this3 = this;\n\n            setTimeout(function () {\n                return _this3.intro.start();\n            }, 0);\n        },\n\n        initTour: function initTour() {\n            var _this4 = this;\n\n            this.intro.setOptions({\n                nextLabel: __('actions.next'),\n                prevLabel: __('actions.back'),\n                doneLabel: __('actions.done')\n            });\n            this.intro.addSteps([{\n                element: this.$el.find('.fn-show-search')[0],\n                intro: introjsTemplate({\n                    header: __('tab.multi_charts.tour.step.search.header'),\n                    body: __('tab.multi_charts.tour.step.search.body')\n                }),\n                onbeforechange: function onbeforechange() {\n                    var chart = _this4.charts[0];\n\n                    if (!chart.getInstrumentSymbol()) {\n                        chart.subscribe(!user.isSpreadBetting() ? 'EUR/USD' : 'EUR/USD' + SPREAD_BET_INSTRUMENT_SYMBOL_IDENTIFIER, false);\n                    }\n                }\n            }, {\n                element: this.$el.find('.layouts-toolbar')[0],\n                intro: introjsTemplate({\n                    header: __('tab.multi_charts.tour.step.layout.header'),\n                    body: __('tab.multi_charts.tour.step.layout.body')\n                })\n            }, {\n                element: this.$el.find('.fn-toolbar-fullscreen')[0],\n                intro: introjsTemplate({\n                    header: __('tab.multi_charts.tour.step.fullscreen.header'),\n                    body: __('tab.multi_charts.tour.step.fullscreen.body')\n                })\n            }, {\n                element: this.$el.find('.chart-buy-sell')[0],\n                intro: introjsTemplate({\n                    header: __('tab.multi_charts.tour.step.buy_sell.header'),\n                    body: __('tab.multi_charts.tour.step.buy_sell.body')\n                })\n            }, {\n                element: this.$el.find('.fn-toolbar-more')[0],\n                intro: introjsTemplate({\n                    header: __('tab.multi_charts.tour.step.show_more.header'),\n                    body: __('tab.multi_charts.tour.step.show_more.body')\n                }),\n                onbeforechange: function onbeforechange() {\n                    _this4.charts[0].hideToolbar();\n                }\n            }, {\n                element: this.$el.find('.chart-panel')[0],\n                intro: introjsTemplate({\n                    header: __('tab.multi_charts.tour.step.toolbar.header'),\n                    body: __('tab.multi_charts.tour.step.toolbar.body')\n                }),\n                onbeforechange: function onbeforechange(element) {\n                    _this4.charts[0].showToolbar(true);\n\n                    var toolbar = _this4.charts[0].getToolbar();\n\n                    if (toolbar && toolbar.el) {\n                        _this4.intro._introItems[5].element = toolbar.el;\n                    }\n                }\n            }]).onbeforechange(function (element) {\n                var onbeforechange = this._introItems[this._currentStep].onbeforechange;\n\n                _.isFunction(onbeforechange) && onbeforechange(element);\n            }).onbeforeexit(function () {\n                _this4.charts[0].hideToolbar();\n            });\n        }\n    });\n}).call(exports, __webpack_require__, exports, module),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! underscore */ \"./node_modules/underscore/underscore.js\"), __webpack_require__(/*! Backbone */ \"./node_modules/backbone/backbone.js\"), __webpack_require__(/*! jquery */ \"./src/vendors/jbone.js\")))\n\n//# sourceURL=webpack:///./src/js/modules/chart/highcharts/multi-charts/multi.charts.view.js?");

/***/ }),

/***/ "./src/js/modules/chart/highcharts/multi-charts/templates/multi.charts.view.html":
/*!***************************************************************************************!*\
  !*** ./src/js/modules/chart/highcharts/multi-charts/templates/multi.charts.view.html ***!
  \***************************************************************************************/
/*! no static exports found */
/*! ModuleConcatenation bailout: Module is not an ECMAScript module */
/***/ (function(module, exports) {

eval("module.exports = \"<div class=\\\"multi-charts-wrapper\\\">\\n    <div class=\\\"multi-charts-header-wrapper\\\">\\n        <div class=\\\"multi-charts-header\\\">\\n            <div class=\\\"layouts-toolbar\\\">\\n                <span><%=__('tab.multi_charts.select_layout')%>:</span>\\n                <% _.each(layouts, function (layout) {%>\\n                <div class=\\\"fn-change-layout change-<%-layout%>\\\" data-layout=\\\"<%-layout%>\\\"></div>\\n                <% }); %>\\n            </div>\\n            <div class=\\\"controls-toolbar\\\">\\n                <div class=\\\"tour-toolbar\\\">\\n                    <span class=\\\"fn-start-tour take-tour\\\"><%=__('tipranks.text.take_tour')%></span>\\n                </div>\\n                <div class=\\\"btn fn-toolbar-fullscreen fullscreen\\\"\\n                     title=\\\"<%=__('chart.toolbar.tooltip.fullscreen')%>\\\">\\n                    <i class=\\\"icon fullscreen\\\"></i>\\n                </div>\\n                <div class=\\\"btn restore-size fn-toolbar-restore-size\\\"\\n                     title=\\\"<%=__('chart.toolbar.tooltip.restore_size')%>\\\">\\n                    <i class=\\\"icon restore-size\\\"></i>\\n                </div>\\n            </div>\\n        </div>\\n        <div class=\\\"multi-charts-close fn-close\\\">\\n            <i class=\\\"icon-close-blue\\\"></i>\\n        </div>\\n    </div>\\n    <div class=\\\"multi-charts-container-wrapper\\\">\\n        <div class=\\\"multi-charts-container\\\">\\n            <div class=\\\"chart-wrapper\\\"></div>\\n            <div class=\\\"chart-wrapper\\\"></div>\\n            <div class=\\\"chart-wrapper\\\"></div>\\n            <div class=\\\"chart-wrapper\\\"></div>\\n        </div>\\n    </div>\\n    <div class=\\\"charts-fullscreen-notification\\\">\\n        <%-__('chart.fullscreen_notification')%>\\n    </div>\\n</div>\\n\";\n\n//# sourceURL=webpack:///./src/js/modules/chart/highcharts/multi-charts/templates/multi.charts.view.html?");

/***/ }),

/***/ "./src/js/modules/chart/multi-charts/components/MultiChartsHighcharts.jsx":
/*!********************************************************************************!*\
  !*** ./src/js/modules/chart/multi-charts/components/MultiChartsHighcharts.jsx ***!
  \********************************************************************************/
/*! exports provided: default */
/*! ModuleConcatenation bailout: Module is referenced from these modules with unsupported syntax: ./src/js/modules/chart/multi-charts/components/MultiChartsComponent.jsx (referenced with import()) */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var components_BackboneView__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! components/BackboneView */ \"./src/js/components/BackboneView.js\");\n/* harmony import */ var components_BackboneView__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(components_BackboneView__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var modules_chart_highcharts_multi_charts_multi_charts_view__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! modules/chart/highcharts/multi-charts/multi.charts.view */ \"./src/js/modules/chart/highcharts/multi-charts/multi.charts.view.js\");\n/* harmony import */ var modules_chart_highcharts_multi_charts_multi_charts_view__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(modules_chart_highcharts_multi_charts_multi_charts_view__WEBPACK_IMPORTED_MODULE_2__);\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\n\n\n\n\nvar MultiChartsHighcharts = function MultiChartsHighcharts(props) {\n  return react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(components_BackboneView__WEBPACK_IMPORTED_MODULE_1___default.a, _extends({ name: modules_chart_highcharts_multi_charts_multi_charts_view__WEBPACK_IMPORTED_MODULE_2___default.a }, props, { options: props }));\n};\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (MultiChartsHighcharts);\n\n//# sourceURL=webpack:///./src/js/modules/chart/multi-charts/components/MultiChartsHighcharts.jsx?");

/***/ })

}]);